package pack;

import java.io.File;
import pack.tests.basics.accu.Digi;
import pack.tests.basics.ctrl.Ctrl;
import pack.tests.basics.inner.Test;
import pack.tests.basics.overwirte.Sub;
import pack.tests.basics.runable.Task;
import pack.tests.basics.sub.Solver;
import pack.tests.bench.Calc;
import pack.tests.reflects.annot.annot;
import pack.tests.reflects.counter.Count;
import pack.tests.reflects.field.FTest;
import pack.tests.reflects.loader.LRun;
import pack.tests.reflects.res.Accesor;
import pack.tests.reflects.retrace.Tracer;
import pack.tests.security.SecTest;

public class Main {
    public static void main(String[] var0) throws Exception {
        System.out.println("Obfuscator Test Program");
        System.out.println("Author: huzpsb");
        System.out.println("Version: 1.0r");
        System.out.println("Link: https://github.com/huzpsb/JavaObfuscatorTest");
        String var3 = "IK";
        File var9 = new File(var3);
        if (!var9.exists()) {
            var9.createNewFile();
            System.out.println();
            System.out.println("[HINT]");
            System.out.println("Only compatibility and efficiency are tested here!");
            System.out.println("For most users, pass all of the basics means the obfuscator is good enough.");
            System.out.println("The Test #2 is for SpringBoot and Android like environment.");
            System.out.println("Choose wisely among strength, compatibility, efficiency, size, and price.");
            System.out.println("[HINT]");
            System.out.println();
        }

        System.out.println("-------------Test #1: Basics-------------");
        System.out.print("Test 1.1: Inheritance ");

        try {
            Sub var24 = new Sub();
            var24.run(1168994165);
        } catch (Throwable var78) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.2: Cross ");

        try {
            Sub var26 = new Sub();
            var26.run(1168994165);
        } catch (Throwable var77) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.3: Throw ");

        try {
            Ctrl var30 = new Ctrl();
            var30.run(1787797814);
        } catch (Throwable var76) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.4: Accuracy ");

        try {
            Digi var32 = new Digi();
            var32.run(892901271);
        } catch (Throwable var75) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.5: SubClass ");

        try {
            new Solver();
        } catch (Throwable var74) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.6: Pool ");

        try {
            Task var36 = new Task();
            var36.run(727450531);
        } catch (Throwable var73) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.7: InnerClass ");

        try {
            Test var40 = new Test();
            var40.run(1419176946);
        } catch (Throwable var72) {
            System.out.println("ERROR");
        }

        System.out.println("-------------Test #2: Reflects-------------");
        System.out.print("Test 2.1: Counter ");

        try {
            Count var45 = new Count();
            var45.run(337410739);
        } catch (Throwable var71) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.2: Chinese 通过LMAO\b\b\b\b    \n");
        System.out.print("Test 2.3: Resource ");

        try {
            Accesor var48 = new Accesor();
            var48.run(604197675);
        } catch (Throwable var70) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.4: Field ");

        try {
            FTest var52 = new FTest();
            var52.run(1876691223);
        } catch (Throwable var69) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.5: Loader ");

        try {
            LRun var56 = new LRun();
            var56.run(2088116254);
        } catch (Throwable var68) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.6: ReTrace ");

        try {
            Tracer var58 = new Tracer();
            var58.run(466761206);
        } catch (Throwable var67) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.7: Annotation ");

        try {
            annot var60 = new annot();
            var60.run(2055899077);
        } catch (Throwable var66) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.8: Sec ");

        try {
            SecTest var64 = new SecTest();
            var64.run(2025340204);
        } catch (Throwable var65) {
            System.out.println("ERROR");
        }

        System.out.println("-------------Test #3: Efficiency-------------");
        Calc.runAll(1330028127);
        System.out.println("-------------Tests r Finished-------------");
    }
}
