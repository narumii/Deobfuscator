package pack.tests.security;

import java.security.Permission;

public class Sman extends SecurityManager {
    public int BRANCHLOCK_DOT_NET_DEMO;

    @Override
    public void checkPermission(Permission var1) {
        if (var1.getName().contains("exitVM")) {
            throw new SecurityException("HOOKED");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "ຄ\u0eeeﾘE|akXv]ZZ\u0eeeﾸ\uffdf"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 8
        // 00c: swap
        // 00d: bipush 12
        // 00f: caload
        // 010: aload 0
        // 011: dup
        // 012: bipush 12
        // 014: swap
        // 015: bipush 8
        // 017: caload
        // 018: castore
        // 019: castore
        // 01a: aload 0
        // 01b: dup
        // 01c: bipush 0
        // 01d: swap
        // 01e: bipush 1
        // 01f: caload
        // 020: aload 0
        // 021: dup
        // 022: bipush 1
        // 023: swap
        // 024: bipush 0
        // 025: caload
        // 026: castore
        // 027: castore
        // 028: aload 0
        // 029: dup
        // 02a: bipush 1
        // 02b: swap
        // 02c: bipush 0
        // 02d: caload
        // 02e: aload 0
        // 02f: dup
        // 030: bipush 0
        // 031: swap
        // 032: bipush 1
        // 033: caload
        // 034: castore
        // 035: castore
        // 036: aload 0
        // 037: dup
        // 038: bipush 6
        // 03a: swap
        // 03b: bipush 19
        // 03d: caload
        // 03e: aload 0
        // 03f: dup
        // 040: bipush 19
        // 042: swap
        // 043: bipush 6
        // 045: caload
        // 046: castore
        // 047: castore
        // 048: goto 15d
        // 04b: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 04e: bipush 0
        // 04f: aaload
        // 050: astore 4
        // 052: aload 4
        // 054: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 057: invokevirtual java/lang/String.hashCode ()I
        // 05a: ldc 65535
        // 05c: iand
        // 05d: istore 5
        // 05f: aload 4
        // 061: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 064: invokevirtual java/lang/String.toCharArray ()[C
        // 067: astore 6
        // 069: aload 0
        // 06a: iload 1
        // 06b: iinc 1 1
        // 06e: caload
        // 06f: bipush 47
        // 071: ixor
        // 072: iload 5
        // 074: ixor
        // 075: anewarray 22
        // 078: astore 7
        // 07a: bipush 0
        // 07b: istore 8
        // 07d: aload 0
        // 07e: iload 1
        // 07f: iinc 1 1
        // 082: caload
        // 083: bipush 65
        // 085: ixor
        // 086: iload 5
        // 088: ixor
        // 089: istore 2
        // 08a: iload 2
        // 08b: newarray 5
        // 08d: astore 9
        // 08f: bipush 0
        // 090: istore 10
        // 092: iload 2
        // 093: ifle 13e
        // 096: aload 0
        // 097: iload 1
        // 098: caload
        // 099: istore 11
        // 09b: aload 6
        // 09d: iload 1
        // 09e: aload 6
        // 0a0: arraylength
        // 0a1: irem
        // 0a2: caload
        // 0a3: sipush 203
        // 0a6: ixor
        // 0a7: lookupswitch 129 15 152 275 160 185 162 198 165 224 166 237 168 243 170 249 174 255 178 261 184 268 185 282 187 289 190 296 191 303 229 211
        // 128: aload 9
        // 12a: iload 10
        // 12c: iload 11
        // 12e: castore
        // 12f: iinc 10 1
        // 132: iinc 1 1
        // 135: iinc 2 -1
        // 138: bipush 0
        // 139: istore 12
        // 13b: goto 1e0
        // 13e: aload 7
        // 140: iload 8
        // 142: iinc 8 1
        // 145: new java/lang/String
        // 148: dup
        // 149: aload 9
        // 14b: invokespecial java/lang/String.<init> ([C)V
        // 14e: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 151: aastore
        // 152: iload 1
        // 153: aload 0
        // 154: arraylength
        // 155: if_icmplt 07d
        // 158: aload 7
        // 15a: putstatic pack/tests/security/Sman.d [Ljava/lang/String;
        // 15d: goto 224
        // 160: iload 11
        // 162: bipush 61
        // 164: ixor
        // 165: istore 11
        // 167: bipush 1
        // 168: istore 12
        // 16a: goto 1e0
        // 16d: iload 11
        // 16f: bipush -101
        // 171: ixor
        // 172: istore 11
        // 174: bipush 1
        // 175: istore 12
        // 177: goto 1e0
        // 17a: iload 11
        // 17c: bipush 21
        // 17e: ixor
        // 17f: istore 11
        // 181: bipush 1
        // 182: istore 12
        // 184: goto 1e0
        // 187: iload 11
        // 189: bipush -3
        // 18b: ixor
        // 18c: istore 11
        // 18e: bipush 1
        // 18f: istore 12
        // 191: goto 1e0
        // 194: bipush 2
        // 195: istore 12
        // 197: goto 1e0
        // 19a: bipush 3
        // 19b: istore 12
        // 19d: goto 1e0
        // 1a0: bipush 4
        // 1a1: istore 12
        // 1a3: goto 1e0
        // 1a6: bipush 5
        // 1a7: istore 12
        // 1a9: goto 1e0
        // 1ac: bipush 6
        // 1ae: istore 12
        // 1b0: goto 1e0
        // 1b3: bipush 7
        // 1b5: istore 12
        // 1b7: goto 1e0
        // 1ba: bipush 8
        // 1bc: istore 12
        // 1be: goto 1e0
        // 1c1: bipush 9
        // 1c3: istore 12
        // 1c5: goto 1e0
        // 1c8: bipush 10
        // 1ca: istore 12
        // 1cc: goto 1e0
        // 1cf: bipush 11
        // 1d1: istore 12
        // 1d3: goto 1e0
        // 1d6: bipush 12
        // 1d8: istore 12
        // 1da: goto 1e0
        // 1dd: goto 04b
        // 1e0: iload 12
        // 1e2: tableswitch -91 0 12 -336 -186 -91 -78 -117 -130 -104 -54 -47 -60 -72 -66 -40
        // 224: return
    }
}
