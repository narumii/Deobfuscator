package pack.tests.basics.sub;

public class Solver {
    public int BRANCHLOCK_DOT_NET_DEMO;

    public Solver() {
        if (SolAdd.get() == 3) {
            System.out.println("PASS");
        } else {
            System.out.println("FAIL");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "ﾽວﾧﾎ\u0e7eﾽﾢﾨﾯﾾວ"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 10
        // 00c: swap
        // 00d: bipush 6
        // 00f: caload
        // 010: aload 0
        // 011: dup
        // 012: bipush 6
        // 014: swap
        // 015: bipush 10
        // 017: caload
        // 018: castore
        // 019: castore
        // 01a: aload 0
        // 01b: dup
        // 01c: bipush 9
        // 01e: swap
        // 01f: bipush 2
        // 020: caload
        // 021: aload 0
        // 022: dup
        // 023: bipush 2
        // 024: swap
        // 025: bipush 9
        // 027: caload
        // 028: castore
        // 029: castore
        // 02a: aload 0
        // 02b: dup
        // 02c: bipush 4
        // 02d: swap
        // 02e: bipush 0
        // 02f: caload
        // 030: aload 0
        // 031: dup
        // 032: bipush 0
        // 033: swap
        // 034: bipush 4
        // 035: caload
        // 036: castore
        // 037: castore
        // 038: aload 0
        // 039: dup
        // 03a: bipush 10
        // 03c: swap
        // 03d: bipush 12
        // 03f: caload
        // 040: aload 0
        // 041: dup
        // 042: bipush 12
        // 044: swap
        // 045: bipush 10
        // 047: caload
        // 048: castore
        // 049: castore
        // 04a: goto 169
        // 04d: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 050: bipush 0
        // 051: aaload
        // 052: astore 4
        // 054: aload 4
        // 056: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 059: invokevirtual java/lang/String.hashCode ()I
        // 05c: ldc 65535
        // 05e: iand
        // 05f: istore 5
        // 061: aload 4
        // 063: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 066: invokevirtual java/lang/String.toCharArray ()[C
        // 069: astore 6
        // 06b: aload 0
        // 06c: iload 1
        // 06d: iinc 1 1
        // 070: caload
        // 071: sipush 213
        // 074: ixor
        // 075: iload 5
        // 077: ixor
        // 078: anewarray 37
        // 07b: astore 7
        // 07d: bipush 0
        // 07e: istore 8
        // 080: aload 0
        // 081: iload 1
        // 082: iinc 1 1
        // 085: caload
        // 086: bipush 10
        // 088: ixor
        // 089: iload 5
        // 08b: ixor
        // 08c: istore 2
        // 08d: iload 2
        // 08e: newarray 5
        // 090: astore 9
        // 092: bipush 0
        // 093: istore 10
        // 095: iload 2
        // 096: ifle 14a
        // 099: aload 0
        // 09a: iload 1
        // 09b: caload
        // 09c: istore 11
        // 09e: aload 6
        // 0a0: iload 1
        // 0a1: aload 6
        // 0a3: arraylength
        // 0a4: irem
        // 0a5: caload
        // 0a6: sipush 231
        // 0a9: ixor
        // 0aa: lookupswitch 138 16 130 194 132 207 133 213 134 226 136 239 139 251 140 257 142 264 145 271 146 284 147 291 148 298 149 312 151 319 180 305 201 245
        // 134: aload 9
        // 136: iload 10
        // 138: iload 11
        // 13a: castore
        // 13b: iinc 10 1
        // 13e: iinc 1 1
        // 141: iinc 2 -1
        // 144: bipush 0
        // 145: istore 12
        // 147: goto 1f3
        // 14a: aload 7
        // 14c: iload 8
        // 14e: iinc 8 1
        // 151: new java/lang/String
        // 154: dup
        // 155: aload 9
        // 157: invokespecial java/lang/String.<init> ([C)V
        // 15a: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 15d: aastore
        // 15e: iload 1
        // 15f: aload 0
        // 160: arraylength
        // 161: if_icmplt 080
        // 164: aload 7
        // 166: putstatic pack/tests/basics/sub/Solver.d [Ljava/lang/String;
        // 169: goto 23c
        // 16c: iload 11
        // 16e: bipush -18
        // 170: ixor
        // 171: istore 11
        // 173: bipush 1
        // 174: istore 12
        // 176: goto 1f3
        // 179: bipush 2
        // 17a: istore 12
        // 17c: goto 1f3
        // 17f: iload 11
        // 181: bipush 16
        // 183: ixor
        // 184: istore 11
        // 186: bipush 1
        // 187: istore 12
        // 189: goto 1f3
        // 18c: iload 11
        // 18e: bipush -49
        // 190: ixor
        // 191: istore 11
        // 193: bipush 1
        // 194: istore 12
        // 196: goto 1f3
        // 199: bipush 3
        // 19a: istore 12
        // 19c: goto 1f3
        // 19f: bipush 4
        // 1a0: istore 12
        // 1a2: goto 1f3
        // 1a5: bipush 5
        // 1a6: istore 12
        // 1a8: goto 1f3
        // 1ab: bipush 6
        // 1ad: istore 12
        // 1af: goto 1f3
        // 1b2: bipush 7
        // 1b4: istore 12
        // 1b6: goto 1f3
        // 1b9: iload 11
        // 1bb: bipush 94
        // 1bd: ixor
        // 1be: istore 11
        // 1c0: bipush 1
        // 1c1: istore 12
        // 1c3: goto 1f3
        // 1c6: bipush 8
        // 1c8: istore 12
        // 1ca: goto 1f3
        // 1cd: bipush 9
        // 1cf: istore 12
        // 1d1: goto 1f3
        // 1d4: bipush 10
        // 1d6: istore 12
        // 1d8: goto 1f3
        // 1db: bipush 11
        // 1dd: istore 12
        // 1df: goto 1f3
        // 1e2: bipush 12
        // 1e4: istore 12
        // 1e6: goto 1f3
        // 1e9: bipush 13
        // 1eb: istore 12
        // 1ed: goto 1f3
        // 1f0: goto 04d
        // 1f3: iload 12
        // 1f5: tableswitch -86 0 13 -352 -193 -137 -105 -124 -92 -80 -86 -74 -67 -40 -118 -33 -60
        // 23c: return
    }
}
