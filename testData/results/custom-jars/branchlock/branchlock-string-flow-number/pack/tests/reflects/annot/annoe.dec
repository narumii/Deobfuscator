package pack.tests.reflects.annot;

import java.lang.reflect.Field;

public class annoe {
    @anno(
        val = "PASS"
    )
    private static final String fail;
    public int BRANCHLOCK_DOT_NET_DEMO;
    public static Throwable P;

    @anno
    public void dox() {
        String var1 = "FAIL";

        for (Field var5 : annoe.class.getDeclaredFields()) {
            var5.setAccessible(true);
            anno var6 = var5.getAnnotation(anno.class);
            if (var6 != null) {
                var1 = var6.val();
            }
        }

        System.out.println(var1);
    }

    @anno(
        val = "no"
    )
    public void dov() {
        System.out.println("FAIL");
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "]ວﾱໟວY\\^THA"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 8
        // 00c: swap
        // 00d: bipush 3
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 3
        // 012: swap
        // 013: bipush 8
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 6
        // 01c: swap
        // 01d: bipush 4
        // 01e: caload
        // 01f: aload 0
        // 020: dup
        // 021: bipush 4
        // 022: swap
        // 023: bipush 6
        // 025: caload
        // 026: castore
        // 027: castore
        // 028: aload 0
        // 029: dup
        // 02a: bipush 8
        // 02c: swap
        // 02d: bipush 0
        // 02e: caload
        // 02f: aload 0
        // 030: dup
        // 031: bipush 0
        // 032: swap
        // 033: bipush 8
        // 035: caload
        // 036: castore
        // 037: castore
        // 038: aload 0
        // 039: dup
        // 03a: bipush 2
        // 03b: swap
        // 03c: bipush 11
        // 03e: caload
        // 03f: aload 0
        // 040: dup
        // 041: bipush 11
        // 043: swap
        // 044: bipush 2
        // 045: caload
        // 046: castore
        // 047: castore
        // 048: goto 14d
        // 04b: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 04e: bipush 0
        // 04f: aaload
        // 050: astore 4
        // 052: aload 4
        // 054: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 057: invokevirtual java/lang/String.hashCode ()I
        // 05a: ldc 65535
        // 05c: iand
        // 05d: istore 5
        // 05f: aload 4
        // 061: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 064: invokevirtual java/lang/String.toCharArray ()[C
        // 067: astore 6
        // 069: aload 0
        // 06a: iload 1
        // 06b: iinc 1 1
        // 06e: caload
        // 06f: bipush 116
        // 071: ixor
        // 072: iload 5
        // 074: ixor
        // 075: anewarray 55
        // 078: astore 7
        // 07a: bipush 0
        // 07b: istore 8
        // 07d: aload 0
        // 07e: iload 1
        // 07f: iinc 1 1
        // 082: caload
        // 083: bipush 10
        // 085: ixor
        // 086: iload 5
        // 088: ixor
        // 089: istore 2
        // 08a: iload 2
        // 08b: newarray 5
        // 08d: astore 9
        // 08f: bipush 0
        // 090: istore 10
        // 092: iload 2
        // 093: ifle 12e
        // 096: aload 0
        // 097: iload 1
        // 098: caload
        // 099: istore 11
        // 09b: aload 6
        // 09d: iload 1
        // 09e: aload 6
        // 0a0: arraylength
        // 0a1: irem
        // 0a2: caload
        // 0a3: sipush 150
        // 0a6: ixor
        // 0a7: lookupswitch 113 13 184 245 226 169 228 182 229 195 230 208 240 221 243 227 245 233 247 239 248 252 249 259 250 266 253 273
        // 118: aload 9
        // 11a: iload 10
        // 11c: iload 11
        // 11e: castore
        // 11f: iinc 10 1
        // 122: iinc 1 1
        // 125: iinc 2 -1
        // 128: bipush 0
        // 129: istore 12
        // 12b: goto 1c2
        // 12e: aload 7
        // 130: iload 8
        // 132: iinc 8 1
        // 135: new java/lang/String
        // 138: dup
        // 139: aload 9
        // 13b: invokespecial java/lang/String.<init> ([C)V
        // 13e: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 141: aastore
        // 142: iload 1
        // 143: aload 0
        // 144: arraylength
        // 145: if_icmplt 07d
        // 148: aload 7
        // 14a: putstatic pack/tests/reflects/annot/annoe.d [Ljava/lang/String;
        // 14d: goto 200
        // 150: iload 11
        // 152: bipush 21
        // 154: ixor
        // 155: istore 11
        // 157: bipush 1
        // 158: istore 12
        // 15a: goto 1c2
        // 15d: iload 11
        // 15f: bipush 56
        // 161: ixor
        // 162: istore 11
        // 164: bipush 1
        // 165: istore 12
        // 167: goto 1c2
        // 16a: iload 11
        // 16c: bipush 9
        // 16e: ixor
        // 16f: istore 11
        // 171: bipush 1
        // 172: istore 12
        // 174: goto 1c2
        // 177: iload 11
        // 179: bipush -9
        // 17b: ixor
        // 17c: istore 11
        // 17e: bipush 1
        // 17f: istore 12
        // 181: goto 1c2
        // 184: bipush 2
        // 185: istore 12
        // 187: goto 1c2
        // 18a: bipush 3
        // 18b: istore 12
        // 18d: goto 1c2
        // 190: bipush 4
        // 191: istore 12
        // 193: goto 1c2
        // 196: bipush 5
        // 197: istore 12
        // 199: goto 1c2
        // 19c: bipush 6
        // 19e: istore 12
        // 1a0: goto 1c2
        // 1a3: bipush 7
        // 1a5: istore 12
        // 1a7: goto 1c2
        // 1aa: bipush 8
        // 1ac: istore 12
        // 1ae: goto 1c2
        // 1b1: bipush 9
        // 1b3: istore 12
        // 1b5: goto 1c2
        // 1b8: bipush 10
        // 1ba: istore 12
        // 1bc: goto 1c2
        // 1bf: goto 04b
        // 1c2: iload 12
        // 1c4: tableswitch -40 0 10 -306 -172 -77 -116 -64 -103 -58 -90 -33 -40 -19
        // 200: ldc "WHAT"
        // 202: putstatic pack/tests/reflects/annot/annoe.fail Ljava/lang/String;
        // 205: return
    }
}
