package pack.tests.reflects.counter;

public class Count {
    public int BRANCHLOCK_DOT_NET_DEMO;

    public void run() {
        if (Countee.class.getFields().length == 1
            && Countee.class.getDeclaredFields().length == 4
            && Countee.class.getMethods().length > 4
            && Countee.class.getDeclaredMethods().length == 4) {
            System.out.println("PASS");
        } else {
            System.out.println("FAIL");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "ﾑฉ\u0e79ﾔﾋ&ฉﾞ4ﾋ\ufff9"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 9
        // 00c: swap
        // 00d: bipush 0
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 0
        // 012: swap
        // 013: bipush 9
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 10
        // 01c: swap
        // 01d: bipush 3
        // 01e: caload
        // 01f: aload 0
        // 020: dup
        // 021: bipush 3
        // 022: swap
        // 023: bipush 10
        // 025: caload
        // 026: castore
        // 027: castore
        // 028: aload 0
        // 029: dup
        // 02a: bipush 2
        // 02b: swap
        // 02c: bipush 0
        // 02d: caload
        // 02e: aload 0
        // 02f: dup
        // 030: bipush 0
        // 031: swap
        // 032: bipush 2
        // 033: caload
        // 034: castore
        // 035: castore
        // 036: aload 0
        // 037: dup
        // 038: bipush 10
        // 03a: swap
        // 03b: bipush 19
        // 03d: caload
        // 03e: aload 0
        // 03f: dup
        // 040: bipush 19
        // 042: swap
        // 043: bipush 10
        // 045: caload
        // 046: castore
        // 047: castore
        // 048: aload 0
        // 049: dup
        // 04a: bipush 9
        // 04c: swap
        // 04d: bipush 5
        // 04e: caload
        // 04f: aload 0
        // 050: dup
        // 051: bipush 5
        // 052: swap
        // 053: bipush 9
        // 055: caload
        // 056: castore
        // 057: castore
        // 058: goto 171
        // 05b: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 05e: bipush 0
        // 05f: aaload
        // 060: astore 4
        // 062: aload 4
        // 064: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 067: invokevirtual java/lang/String.hashCode ()I
        // 06a: ldc 65535
        // 06c: iand
        // 06d: istore 5
        // 06f: aload 4
        // 071: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 074: invokevirtual java/lang/String.toCharArray ()[C
        // 077: astore 6
        // 079: aload 0
        // 07a: iload 1
        // 07b: iinc 1 1
        // 07e: caload
        // 07f: sipush 210
        // 082: ixor
        // 083: iload 5
        // 085: ixor
        // 086: anewarray 50
        // 089: astore 7
        // 08b: bipush 0
        // 08c: istore 8
        // 08e: aload 0
        // 08f: iload 1
        // 090: iinc 1 1
        // 093: caload
        // 094: sipush 164
        // 097: ixor
        // 098: iload 5
        // 09a: ixor
        // 09b: istore 2
        // 09c: iload 2
        // 09d: newarray 5
        // 09f: astore 9
        // 0a1: bipush 0
        // 0a2: istore 10
        // 0a4: iload 2
        // 0a5: ifle 152
        // 0a8: aload 0
        // 0a9: iload 1
        // 0aa: caload
        // 0ab: istore 11
        // 0ad: aload 6
        // 0af: iload 1
        // 0b0: aload 6
        // 0b2: arraylength
        // 0b3: irem
        // 0b4: caload
        // 0b5: sipush 233
        // 0b8: ixor
        // 0b9: lookupswitch 131 15 130 187 133 200 134 213 135 232 136 238 138 244 140 263 143 270 153 277 154 284 155 291 156 298 157 305 170 250 199 219
        // 13c: aload 9
        // 13e: iload 10
        // 140: iload 11
        // 142: castore
        // 143: iinc 10 1
        // 146: iinc 1 1
        // 149: iinc 2 -1
        // 14c: bipush 0
        // 14d: istore 12
        // 14f: goto 1f4
        // 152: aload 7
        // 154: iload 8
        // 156: iinc 8 1
        // 159: new java/lang/String
        // 15c: dup
        // 15d: aload 9
        // 15f: invokespecial java/lang/String.<init> ([C)V
        // 162: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 165: aastore
        // 166: iload 1
        // 167: aload 0
        // 168: arraylength
        // 169: if_icmplt 08e
        // 16c: aload 7
        // 16e: putstatic pack/tests/reflects/counter/Count.d [Ljava/lang/String;
        // 171: goto 238
        // 174: iload 11
        // 176: bipush -72
        // 178: ixor
        // 179: istore 11
        // 17b: bipush 1
        // 17c: istore 12
        // 17e: goto 1f4
        // 181: iload 11
        // 183: bipush -37
        // 185: ixor
        // 186: istore 11
        // 188: bipush 1
        // 189: istore 12
        // 18b: goto 1f4
        // 18e: bipush 2
        // 18f: istore 12
        // 191: goto 1f4
        // 194: iload 11
        // 196: bipush -40
        // 198: ixor
        // 199: istore 11
        // 19b: bipush 1
        // 19c: istore 12
        // 19e: goto 1f4
        // 1a1: bipush 3
        // 1a2: istore 12
        // 1a4: goto 1f4
        // 1a7: bipush 4
        // 1a8: istore 12
        // 1aa: goto 1f4
        // 1ad: bipush 5
        // 1ae: istore 12
        // 1b0: goto 1f4
        // 1b3: iload 11
        // 1b5: bipush 117
        // 1b7: ixor
        // 1b8: istore 11
        // 1ba: bipush 1
        // 1bb: istore 12
        // 1bd: goto 1f4
        // 1c0: bipush 6
        // 1c2: istore 12
        // 1c4: goto 1f4
        // 1c7: bipush 7
        // 1c9: istore 12
        // 1cb: goto 1f4
        // 1ce: bipush 8
        // 1d0: istore 12
        // 1d2: goto 1f4
        // 1d5: bipush 9
        // 1d7: istore 12
        // 1d9: goto 1f4
        // 1dc: bipush 10
        // 1de: istore 12
        // 1e0: goto 1f4
        // 1e3: bipush 11
        // 1e5: istore 12
        // 1e7: goto 1f4
        // 1ea: bipush 12
        // 1ec: istore 12
        // 1ee: goto 1f4
        // 1f1: goto 05b
        // 1f4: iload 12
        // 1f6: tableswitch -85 0 12 -338 -186 -117 -130 -85 -104 -98 -54 -73 -47 -67 -79 -26
        // 238: return
    }
}
