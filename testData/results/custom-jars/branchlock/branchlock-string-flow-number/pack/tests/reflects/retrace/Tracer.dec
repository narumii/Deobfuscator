package pack.tests.reflects.retrace;

public class Tracer {
    public int BRANCHLOCK_DOT_NET_DEMO;

    public void run() {
        new Tracee().toTrace(5);
        if (Tracee.p == 5) {
            System.out.println("PASS");
        } else {
            System.out.println("FAIL");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "C\u0ee4\u0ee4ﾧﾸ]ￖLO\u0e3eK"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 6
        // 00c: swap
        // 00d: bipush 2
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 2
        // 012: swap
        // 013: bipush 6
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 10
        // 01c: swap
        // 01d: bipush 3
        // 01e: caload
        // 01f: aload 0
        // 020: dup
        // 021: bipush 3
        // 022: swap
        // 023: bipush 10
        // 025: caload
        // 026: castore
        // 027: castore
        // 028: aload 0
        // 029: dup
        // 02a: bipush 9
        // 02c: swap
        // 02d: bipush 0
        // 02e: caload
        // 02f: aload 0
        // 030: dup
        // 031: bipush 0
        // 032: swap
        // 033: bipush 9
        // 035: caload
        // 036: castore
        // 037: castore
        // 038: aload 0
        // 039: dup
        // 03a: bipush 8
        // 03c: swap
        // 03d: bipush 15
        // 03f: caload
        // 040: aload 0
        // 041: dup
        // 042: bipush 15
        // 044: swap
        // 045: bipush 8
        // 047: caload
        // 048: castore
        // 049: castore
        // 04a: aload 0
        // 04b: dup
        // 04c: bipush 8
        // 04e: swap
        // 04f: bipush 2
        // 050: caload
        // 051: aload 0
        // 052: dup
        // 053: bipush 2
        // 054: swap
        // 055: bipush 8
        // 057: caload
        // 058: castore
        // 059: castore
        // 05a: goto 159
        // 05d: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 060: bipush 0
        // 061: aaload
        // 062: astore 4
        // 064: aload 4
        // 066: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 069: invokevirtual java/lang/String.hashCode ()I
        // 06c: ldc 65535
        // 06e: iand
        // 06f: istore 5
        // 071: aload 4
        // 073: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 076: invokevirtual java/lang/String.toCharArray ()[C
        // 079: astore 6
        // 07b: aload 0
        // 07c: iload 1
        // 07d: iinc 1 1
        // 080: caload
        // 081: sipush 149
        // 084: ixor
        // 085: iload 5
        // 087: ixor
        // 088: anewarray 42
        // 08b: astore 7
        // 08d: bipush 0
        // 08e: istore 8
        // 090: aload 0
        // 091: iload 1
        // 092: iinc 1 1
        // 095: caload
        // 096: bipush 73
        // 098: ixor
        // 099: iload 5
        // 09b: ixor
        // 09c: istore 2
        // 09d: iload 2
        // 09e: newarray 5
        // 0a0: astore 9
        // 0a2: bipush 0
        // 0a3: istore 10
        // 0a5: iload 2
        // 0a6: ifle 13a
        // 0a9: aload 0
        // 0aa: iload 1
        // 0ab: caload
        // 0ac: istore 11
        // 0ae: aload 6
        // 0b0: iload 1
        // 0b1: aload 6
        // 0b3: arraylength
        // 0b4: irem
        // 0b5: caload
        // 0b6: bipush 95
        // 0b8: ixor
        // 0b9: lookupswitch 107 12 11 220 43 214 44 239 45 246 47 260 51 176 52 189 57 202 58 208 60 226 62 253 113 163
        // 124: aload 9
        // 126: iload 10
        // 128: iload 11
        // 12a: castore
        // 12b: iinc 10 1
        // 12e: iinc 1 1
        // 131: iinc 2 -1
        // 134: bipush 0
        // 135: istore 12
        // 137: goto 1c7
        // 13a: aload 7
        // 13c: iload 8
        // 13e: iinc 8 1
        // 141: new java/lang/String
        // 144: dup
        // 145: aload 9
        // 147: invokespecial java/lang/String.<init> ([C)V
        // 14a: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 14d: aastore
        // 14e: iload 1
        // 14f: aload 0
        // 150: arraylength
        // 151: if_icmplt 090
        // 154: aload 7
        // 156: putstatic pack/tests/reflects/retrace/Tracer.d [Ljava/lang/String;
        // 159: goto 200
        // 15c: iload 11
        // 15e: bipush -21
        // 160: ixor
        // 161: istore 11
        // 163: bipush 1
        // 164: istore 12
        // 166: goto 1c7
        // 169: iload 11
        // 16b: bipush 14
        // 16d: ixor
        // 16e: istore 11
        // 170: bipush 1
        // 171: istore 12
        // 173: goto 1c7
        // 176: iload 11
        // 178: bipush 10
        // 17a: ixor
        // 17b: istore 11
        // 17d: bipush 1
        // 17e: istore 12
        // 180: goto 1c7
        // 183: bipush 2
        // 184: istore 12
        // 186: goto 1c7
        // 189: bipush 3
        // 18a: istore 12
        // 18c: goto 1c7
        // 18f: bipush 4
        // 190: istore 12
        // 192: goto 1c7
        // 195: bipush 5
        // 196: istore 12
        // 198: goto 1c7
        // 19b: iload 11
        // 19d: bipush -122
        // 19f: ixor
        // 1a0: istore 11
        // 1a2: bipush 1
        // 1a3: istore 12
        // 1a5: goto 1c7
        // 1a8: bipush 6
        // 1aa: istore 12
        // 1ac: goto 1c7
        // 1af: bipush 7
        // 1b1: istore 12
        // 1b3: goto 1c7
        // 1b6: bipush 8
        // 1b8: istore 12
        // 1ba: goto 1c7
        // 1bd: bipush 9
        // 1bf: istore 12
        // 1c1: goto 1c7
        // 1c4: goto 05d
        // 1c7: iload 12
        // 1c9: tableswitch -292 0 9 -292 -165 -83 -109 -96 -64 -70 -58 -33 -46
        // 200: return
    }
}
