package pack.tests.security;

import java.security.Permission;

public class Sman extends SecurityManager {
    @Override
    public void checkPermission(Permission perm) {
        if (perm.getName().contains("exitVM")) {
            throw new SecurityException("HOOKED");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "วsHOﾤ໙E0ว\u0011ﾓ\u001dtVu"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 1
        // 00b: swap
        // 00c: bipush 0
        // 00d: caload
        // 00e: aload 0
        // 00f: dup
        // 010: bipush 0
        // 011: swap
        // 012: bipush 1
        // 013: caload
        // 014: castore
        // 015: castore
        // 016: aload 0
        // 017: dup
        // 018: bipush 5
        // 019: swap
        // 01a: bipush 0
        // 01b: caload
        // 01c: aload 0
        // 01d: dup
        // 01e: bipush 0
        // 01f: swap
        // 020: bipush 5
        // 021: caload
        // 022: castore
        // 023: castore
        // 024: aload 0
        // 025: dup
        // 026: bipush 8
        // 028: swap
        // 029: bipush 28
        // 02b: caload
        // 02c: aload 0
        // 02d: dup
        // 02e: bipush 28
        // 030: swap
        // 031: bipush 8
        // 033: caload
        // 034: castore
        // 035: castore
        // 036: bipush 0
        // 037: istore 3
        // 038: goto 154
        // 03b: astore 3
        // 03c: aload 3
        // 03d: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 040: bipush 0
        // 041: aaload
        // 042: astore 4
        // 044: aload 4
        // 046: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 049: invokevirtual java/lang/String.hashCode ()I
        // 04c: ldc 65535
        // 04e: iand
        // 04f: istore 5
        // 051: aload 4
        // 053: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 056: invokevirtual java/lang/String.toCharArray ()[C
        // 059: astore 6
        // 05b: aload 0
        // 05c: iload 1
        // 05d: iinc 1 1
        // 060: caload
        // 061: bipush 114
        // 063: ixor
        // 064: iload 5
        // 066: ixor
        // 067: anewarray 23
        // 06a: astore 7
        // 06c: bipush 0
        // 06d: istore 8
        // 06f: aload 0
        // 070: iload 1
        // 071: iinc 1 1
        // 074: caload
        // 075: sipush 136
        // 078: ixor
        // 079: iload 5
        // 07b: ixor
        // 07c: istore 2
        // 07d: iload 2
        // 07e: newarray 5
        // 080: astore 9
        // 082: bipush 0
        // 083: istore 10
        // 085: iload 2
        // 086: ifle 135
        // 089: aload 0
        // 08a: iload 1
        // 08b: caload
        // 08c: istore 11
        // 08e: aload 6
        // 090: iload 1
        // 091: aload 6
        // 093: arraylength
        // 094: irem
        // 095: caload
        // 096: sipush 176
        // 099: ixor
        // 09a: lookupswitch 133 15 158 299 192 189 194 202 195 215 196 234 197 240 201 246 209 252 211 259 213 271 217 278 219 285 221 292 222 306 227 221
        // 11c: nop
        // 11d: nop
        // 11e: athrow
        // 11f: aload 9
        // 121: iload 10
        // 123: iload 11
        // 125: castore
        // 126: iinc 10 1
        // 129: iinc 1 1
        // 12c: iinc 2 -1
        // 12f: bipush 0
        // 130: istore 12
        // 132: goto 1d6
        // 135: aload 7
        // 137: iload 8
        // 139: iinc 8 1
        // 13c: new java/lang/String
        // 13f: dup
        // 140: aload 9
        // 142: invokespecial java/lang/String.<init> ([C)V
        // 145: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 148: aastore
        // 149: iload 1
        // 14a: aload 0
        // 14b: arraylength
        // 14c: if_icmplt 06f
        // 14f: aload 7
        // 151: putstatic pack/tests/security/Sman.catch [Ljava/lang/String;
        // 154: goto 21c
        // 157: iload 11
        // 159: bipush 116
        // 15b: ixor
        // 15c: istore 11
        // 15e: bipush 1
        // 15f: istore 12
        // 161: goto 1d6
        // 164: iload 11
        // 166: bipush -21
        // 168: ixor
        // 169: istore 11
        // 16b: bipush 1
        // 16c: istore 12
        // 16e: goto 1d6
        // 171: bipush 2
        // 172: istore 12
        // 174: goto 1d6
        // 177: iload 11
        // 179: bipush 56
        // 17b: ixor
        // 17c: istore 11
        // 17e: bipush 1
        // 17f: istore 12
        // 181: goto 1d6
        // 184: bipush 3
        // 185: istore 12
        // 187: goto 1d6
        // 18a: bipush 4
        // 18b: istore 12
        // 18d: goto 1d6
        // 190: bipush 5
        // 191: istore 12
        // 193: goto 1d6
        // 196: bipush 6
        // 198: istore 12
        // 19a: goto 1d6
        // 19d: iload 11
        // 19f: bipush 0
        // 1a0: ixor
        // 1a1: istore 11
        // 1a3: bipush 1
        // 1a4: istore 12
        // 1a6: goto 1d6
        // 1a9: bipush 7
        // 1ab: istore 12
        // 1ad: goto 1d6
        // 1b0: bipush 8
        // 1b2: istore 12
        // 1b4: goto 1d6
        // 1b7: bipush 9
        // 1b9: istore 12
        // 1bb: goto 1d6
        // 1be: bipush 10
        // 1c0: istore 12
        // 1c2: goto 1d6
        // 1c5: bipush 11
        // 1c7: istore 12
        // 1c9: goto 1d6
        // 1cc: bipush 12
        // 1ce: istore 12
        // 1d0: goto 1d6
        // 1d3: goto 03b
        // 1d6: iload 12
        // 1d8: tableswitch -129 0 12 -339 -185 -129 -97 -84 -78 -103 -59 -116 -47 -72 -40 -66
        // 21c: return
    }
}
