package pack.tests.basics.sub;

public class Solver {
    public Solver() {
        if (SolAdd.get() == 3) {
            System.out.println("PASS");
        } else {
            System.out.println("FAIL");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "%*<-i?ํະ-ํv"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 0
        // 00b: swap
        // 00c: bipush 9
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 9
        // 013: swap
        // 014: bipush 0
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 7
        // 01c: swap
        // 01d: bipush 1
        // 01e: caload
        // 01f: aload 0
        // 020: dup
        // 021: bipush 1
        // 022: swap
        // 023: bipush 7
        // 025: caload
        // 026: castore
        // 027: castore
        // 028: aload 0
        // 029: dup
        // 02a: bipush 1
        // 02b: swap
        // 02c: bipush 0
        // 02d: caload
        // 02e: aload 0
        // 02f: dup
        // 030: bipush 0
        // 031: swap
        // 032: bipush 1
        // 033: caload
        // 034: castore
        // 035: castore
        // 036: aload 0
        // 037: dup
        // 038: bipush 7
        // 03a: swap
        // 03b: bipush 21
        // 03d: caload
        // 03e: aload 0
        // 03f: dup
        // 040: bipush 21
        // 042: swap
        // 043: bipush 7
        // 045: caload
        // 046: castore
        // 047: castore
        // 048: bipush 0
        // 049: istore 3
        // 04a: goto 170
        // 04d: astore 3
        // 04e: aload 3
        // 04f: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 052: bipush 0
        // 053: aaload
        // 054: astore 4
        // 056: aload 4
        // 058: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 05b: invokevirtual java/lang/String.hashCode ()I
        // 05e: ldc 65535
        // 060: iand
        // 061: istore 5
        // 063: aload 4
        // 065: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 068: invokevirtual java/lang/String.toCharArray ()[C
        // 06b: astore 6
        // 06d: aload 0
        // 06e: iload 1
        // 06f: iinc 1 1
        // 072: caload
        // 073: bipush 27
        // 075: ixor
        // 076: iload 5
        // 078: ixor
        // 079: anewarray 38
        // 07c: astore 7
        // 07e: bipush 0
        // 07f: istore 8
        // 081: aload 0
        // 082: iload 1
        // 083: iinc 1 1
        // 086: caload
        // 087: sipush 224
        // 08a: ixor
        // 08b: iload 5
        // 08d: ixor
        // 08e: istore 2
        // 08f: iload 2
        // 090: newarray 5
        // 092: astore 9
        // 094: bipush 0
        // 095: istore 10
        // 097: iload 2
        // 098: ifle 151
        // 09b: aload 0
        // 09c: iload 1
        // 09d: caload
        // 09e: istore 11
        // 0a0: aload 6
        // 0a2: iload 1
        // 0a3: aload 6
        // 0a5: arraylength
        // 0a6: irem
        // 0a7: caload
        // 0a8: sipush 173
        // 0ab: ixor
        // 0ac: lookupswitch 143 16 131 225 193 199 194 212 196 238 198 251 200 257 204 263 206 269 207 275 216 282 217 289 219 296 221 303 222 310 223 324 254 317
        // 138: nop
        // 139: nop
        // 13a: athrow
        // 13b: aload 9
        // 13d: iload 10
        // 13f: iload 11
        // 141: castore
        // 142: iinc 10 1
        // 145: iinc 1 1
        // 148: iinc 2 -1
        // 14b: bipush 0
        // 14c: istore 12
        // 14e: goto 1fa
        // 151: aload 7
        // 153: iload 8
        // 155: iinc 8 1
        // 158: new java/lang/String
        // 15b: dup
        // 15c: aload 9
        // 15e: invokespecial java/lang/String.<init> ([C)V
        // 161: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 164: aastore
        // 165: iload 1
        // 166: aload 0
        // 167: arraylength
        // 168: if_icmplt 081
        // 16b: aload 7
        // 16d: putstatic pack/tests/basics/sub/Solver.catch [Ljava/lang/String;
        // 170: goto 244
        // 173: iload 11
        // 175: bipush -54
        // 177: ixor
        // 178: istore 11
        // 17a: bipush 1
        // 17b: istore 12
        // 17d: goto 1fa
        // 180: iload 11
        // 182: bipush 126
        // 184: ixor
        // 185: istore 11
        // 187: bipush 1
        // 188: istore 12
        // 18a: goto 1fa
        // 18d: iload 11
        // 18f: bipush 58
        // 191: ixor
        // 192: istore 11
        // 194: bipush 1
        // 195: istore 12
        // 197: goto 1fa
        // 19a: iload 11
        // 19c: bipush 108
        // 19e: ixor
        // 19f: istore 11
        // 1a1: bipush 1
        // 1a2: istore 12
        // 1a4: goto 1fa
        // 1a7: bipush 2
        // 1a8: istore 12
        // 1aa: goto 1fa
        // 1ad: bipush 3
        // 1ae: istore 12
        // 1b0: goto 1fa
        // 1b3: bipush 4
        // 1b4: istore 12
        // 1b6: goto 1fa
        // 1b9: bipush 5
        // 1ba: istore 12
        // 1bc: goto 1fa
        // 1bf: bipush 6
        // 1c1: istore 12
        // 1c3: goto 1fa
        // 1c6: bipush 7
        // 1c8: istore 12
        // 1ca: goto 1fa
        // 1cd: bipush 8
        // 1cf: istore 12
        // 1d1: goto 1fa
        // 1d4: bipush 9
        // 1d6: istore 12
        // 1d8: goto 1fa
        // 1db: bipush 10
        // 1dd: istore 12
        // 1df: goto 1fa
        // 1e2: bipush 11
        // 1e4: istore 12
        // 1e6: goto 1fa
        // 1e9: bipush 12
        // 1eb: istore 12
        // 1ed: goto 1fa
        // 1f0: bipush 13
        // 1f2: istore 12
        // 1f4: goto 1fa
        // 1f7: goto 04d
        // 1fa: iload 12
        // 1fc: tableswitch -137 0 13 -357 -193 -98 -137 -79 -85 -73 -124 -67 -111 -54 -47 -33 -61
        // 244: return
    }
}
