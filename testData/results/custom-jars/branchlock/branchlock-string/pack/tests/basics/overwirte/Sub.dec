package pack.tests.basics.overwirte;

public class Sub extends Super {
    @Override
    public void run() {
        System.out.println(this.face(1));
    }

    @Override
    public String face(int i) {
        return i == 1 ? "PASS" : "FAIL";
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "ￒທW\u001d\u0ef0\u000f\u0ef0\u001a\u001d\u0015ￍ"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 0
        // 00b: swap
        // 00c: bipush 10
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 10
        // 013: swap
        // 014: bipush 0
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 4
        // 01b: swap
        // 01c: bipush 0
        // 01d: caload
        // 01e: aload 0
        // 01f: dup
        // 020: bipush 0
        // 021: swap
        // 022: bipush 4
        // 023: caload
        // 024: castore
        // 025: castore
        // 026: aload 0
        // 027: dup
        // 028: bipush 1
        // 029: swap
        // 02a: bipush 0
        // 02b: caload
        // 02c: aload 0
        // 02d: dup
        // 02e: bipush 0
        // 02f: swap
        // 030: bipush 1
        // 031: caload
        // 032: castore
        // 033: castore
        // 034: aload 0
        // 035: dup
        // 036: bipush 5
        // 037: swap
        // 038: bipush 18
        // 03a: caload
        // 03b: aload 0
        // 03c: dup
        // 03d: bipush 18
        // 03f: swap
        // 040: bipush 5
        // 041: caload
        // 042: castore
        // 043: castore
        // 044: bipush 0
        // 045: istore 3
        // 046: goto 168
        // 049: astore 3
        // 04a: aload 3
        // 04b: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 04e: bipush 0
        // 04f: aaload
        // 050: astore 4
        // 052: aload 4
        // 054: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 057: invokevirtual java/lang/String.hashCode ()I
        // 05a: ldc 65535
        // 05c: iand
        // 05d: istore 5
        // 05f: aload 4
        // 061: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 064: invokevirtual java/lang/String.toCharArray ()[C
        // 067: astore 6
        // 069: aload 0
        // 06a: iload 1
        // 06b: iinc 1 1
        // 06e: caload
        // 06f: bipush 60
        // 071: ixor
        // 072: iload 5
        // 074: ixor
        // 075: anewarray 43
        // 078: astore 7
        // 07a: bipush 0
        // 07b: istore 8
        // 07d: aload 0
        // 07e: iload 1
        // 07f: iinc 1 1
        // 082: caload
        // 083: bipush 93
        // 085: ixor
        // 086: iload 5
        // 088: ixor
        // 089: istore 2
        // 08a: iload 2
        // 08b: newarray 5
        // 08d: astore 9
        // 08f: bipush 0
        // 090: istore 10
        // 092: iload 2
        // 093: ifle 149
        // 096: aload 0
        // 097: iload 1
        // 098: caload
        // 099: istore 11
        // 09b: aload 6
        // 09d: iload 1
        // 09e: aload 6
        // 0a0: arraylength
        // 0a1: irem
        // 0a2: caload
        // 0a3: sipush 144
        // 0a6: ixor
        // 0a7: lookupswitch 140 16 190 314 195 228 224 196 226 209 227 215 228 241 229 247 230 253 231 259 241 266 242 273 243 280 245 293 249 300 251 307 255 321
        // 130: nop
        // 131: nop
        // 132: athrow
        // 133: aload 9
        // 135: iload 10
        // 137: iload 11
        // 139: castore
        // 13a: iinc 10 1
        // 13d: iinc 1 1
        // 140: iinc 2 -1
        // 143: bipush 0
        // 144: istore 12
        // 146: goto 1f2
        // 149: aload 7
        // 14b: iload 8
        // 14d: iinc 8 1
        // 150: new java/lang/String
        // 153: dup
        // 154: aload 9
        // 156: invokespecial java/lang/String.<init> ([C)V
        // 159: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 15c: aastore
        // 15d: iload 1
        // 15e: aload 0
        // 15f: arraylength
        // 160: if_icmplt 07d
        // 163: aload 7
        // 165: putstatic pack/tests/basics/overwirte/Sub.catch [Ljava/lang/String;
        // 168: goto 23c
        // 16b: iload 11
        // 16d: bipush -89
        // 16f: ixor
        // 170: istore 11
        // 172: bipush 1
        // 173: istore 12
        // 175: goto 1f2
        // 178: bipush 2
        // 179: istore 12
        // 17b: goto 1f2
        // 17e: iload 11
        // 180: bipush 92
        // 182: ixor
        // 183: istore 11
        // 185: bipush 1
        // 186: istore 12
        // 188: goto 1f2
        // 18b: iload 11
        // 18d: bipush -98
        // 18f: ixor
        // 190: istore 11
        // 192: bipush 1
        // 193: istore 12
        // 195: goto 1f2
        // 198: bipush 3
        // 199: istore 12
        // 19b: goto 1f2
        // 19e: bipush 4
        // 19f: istore 12
        // 1a1: goto 1f2
        // 1a4: bipush 5
        // 1a5: istore 12
        // 1a7: goto 1f2
        // 1aa: bipush 6
        // 1ac: istore 12
        // 1ae: goto 1f2
        // 1b1: bipush 7
        // 1b3: istore 12
        // 1b5: goto 1f2
        // 1b8: bipush 8
        // 1ba: istore 12
        // 1bc: goto 1f2
        // 1bf: iload 11
        // 1c1: bipush 7
        // 1c3: ixor
        // 1c4: istore 11
        // 1c6: bipush 1
        // 1c7: istore 12
        // 1c9: goto 1f2
        // 1cc: bipush 9
        // 1ce: istore 12
        // 1d0: goto 1f2
        // 1d3: bipush 10
        // 1d5: istore 12
        // 1d7: goto 1f2
        // 1da: bipush 11
        // 1dc: istore 12
        // 1de: goto 1f2
        // 1e1: bipush 12
        // 1e3: istore 12
        // 1e5: goto 1f2
        // 1e8: bipush 13
        // 1ea: istore 12
        // 1ec: goto 1f2
        // 1ef: goto 049
        // 1f2: iload 12
        // 1f4: tableswitch -86 0 13 -354 -193 -137 -118 -105 -92 -86 -74 -80 -53 -40 -60 -67 -33
        // 23c: return
    }
}
