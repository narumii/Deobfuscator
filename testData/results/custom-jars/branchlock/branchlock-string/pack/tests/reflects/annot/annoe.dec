package pack.tests.reflects.annot;

import java.lang.reflect.Field;

public class annoe {
    @anno(
        val = "PASS"
    )
    private static final String fail;

    @anno
    public void dox() throws Exception {
        String toGet = "FAIL";

        for (Field f : annoe.class.getDeclaredFields()) {
            f.setAccessible(true);
            anno obj = f.getAnnotation(anno.class);
            if (obj != null) {
                toGet = obj.val();
            }
        }

        System.out.println(toGet);
    }

    @anno(
        val = "no"
    )
    public void dov() {
        System.out.println("FAIL");
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "ￔช#<￥\uffc1ช\ufffbຖ\ufff4￨"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 4
        // 00b: swap
        // 00c: bipush 0
        // 00d: caload
        // 00e: aload 0
        // 00f: dup
        // 010: bipush 0
        // 011: swap
        // 012: bipush 4
        // 013: caload
        // 014: castore
        // 015: castore
        // 016: aload 0
        // 017: dup
        // 018: bipush 4
        // 019: swap
        // 01a: bipush 8
        // 01c: caload
        // 01d: aload 0
        // 01e: dup
        // 01f: bipush 8
        // 021: swap
        // 022: bipush 4
        // 023: caload
        // 024: castore
        // 025: castore
        // 026: aload 0
        // 027: dup
        // 028: bipush 4
        // 029: swap
        // 02a: bipush 0
        // 02b: caload
        // 02c: aload 0
        // 02d: dup
        // 02e: bipush 0
        // 02f: swap
        // 030: bipush 4
        // 031: caload
        // 032: castore
        // 033: castore
        // 034: aload 0
        // 035: dup
        // 036: bipush 4
        // 037: swap
        // 038: bipush 20
        // 03a: caload
        // 03b: aload 0
        // 03c: dup
        // 03d: bipush 20
        // 03f: swap
        // 040: bipush 4
        // 041: caload
        // 042: castore
        // 043: castore
        // 044: bipush 0
        // 045: istore 3
        // 046: goto 150
        // 049: astore 3
        // 04a: aload 3
        // 04b: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 04e: bipush 0
        // 04f: aaload
        // 050: astore 4
        // 052: aload 4
        // 054: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 057: invokevirtual java/lang/String.hashCode ()I
        // 05a: ldc 65535
        // 05c: iand
        // 05d: istore 5
        // 05f: aload 4
        // 061: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 064: invokevirtual java/lang/String.toCharArray ()[C
        // 067: astore 6
        // 069: aload 0
        // 06a: iload 1
        // 06b: iinc 1 1
        // 06e: caload
        // 06f: bipush 61
        // 071: ixor
        // 072: iload 5
        // 074: ixor
        // 075: anewarray 60
        // 078: astore 7
        // 07a: bipush 0
        // 07b: istore 8
        // 07d: aload 0
        // 07e: iload 1
        // 07f: iinc 1 1
        // 082: caload
        // 083: sipush 167
        // 086: ixor
        // 087: iload 5
        // 089: ixor
        // 08a: istore 2
        // 08b: iload 2
        // 08c: newarray 5
        // 08e: astore 9
        // 090: bipush 0
        // 091: istore 10
        // 093: iload 2
        // 094: ifle 131
        // 097: aload 0
        // 098: iload 1
        // 099: caload
        // 09a: istore 11
        // 09c: aload 6
        // 09e: iload 1
        // 09f: aload 6
        // 0a1: arraylength
        // 0a2: irem
        // 0a3: caload
        // 0a4: bipush 0
        // 0a5: ixor
        // 0a6: lookupswitch 117 13 46 230 97 173 99 186 101 199 102 205 107 211 108 217 110 236 111 243 112 250 114 257 115 264 116 271
        // 118: nop
        // 119: nop
        // 11a: athrow
        // 11b: aload 9
        // 11d: iload 10
        // 11f: iload 11
        // 121: castore
        // 122: iinc 10 1
        // 125: iinc 1 1
        // 128: iinc 2 -1
        // 12b: bipush 0
        // 12c: istore 12
        // 12e: goto 1c5
        // 131: aload 7
        // 133: iload 8
        // 135: iinc 8 1
        // 138: new java/lang/String
        // 13b: dup
        // 13c: aload 9
        // 13e: invokespecial java/lang/String.<init> ([C)V
        // 141: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 144: aastore
        // 145: iload 1
        // 146: aload 0
        // 147: arraylength
        // 148: if_icmplt 07d
        // 14b: aload 7
        // 14d: putstatic pack/tests/reflects/annot/annoe.catch [Ljava/lang/String;
        // 150: goto 200
        // 153: iload 11
        // 155: bipush -92
        // 157: ixor
        // 158: istore 11
        // 15a: bipush 1
        // 15b: istore 12
        // 15d: goto 1c5
        // 160: iload 11
        // 162: bipush 116
        // 164: ixor
        // 165: istore 11
        // 167: bipush 1
        // 168: istore 12
        // 16a: goto 1c5
        // 16d: bipush 2
        // 16e: istore 12
        // 170: goto 1c5
        // 173: bipush 3
        // 174: istore 12
        // 176: goto 1c5
        // 179: bipush 4
        // 17a: istore 12
        // 17c: goto 1c5
        // 17f: iload 11
        // 181: bipush -67
        // 183: ixor
        // 184: istore 11
        // 186: bipush 1
        // 187: istore 12
        // 189: goto 1c5
        // 18c: bipush 5
        // 18d: istore 12
        // 18f: goto 1c5
        // 192: bipush 6
        // 194: istore 12
        // 196: goto 1c5
        // 199: bipush 7
        // 19b: istore 12
        // 19d: goto 1c5
        // 1a0: bipush 8
        // 1a2: istore 12
        // 1a4: goto 1c5
        // 1a7: bipush 9
        // 1a9: istore 12
        // 1ab: goto 1c5
        // 1ae: bipush 10
        // 1b0: istore 12
        // 1b2: goto 1c5
        // 1b5: iload 11
        // 1b7: bipush -107
        // 1b9: ixor
        // 1ba: istore 11
        // 1bc: bipush 1
        // 1bd: istore 12
        // 1bf: goto 1c5
        // 1c2: goto 049
        // 1c5: iload 12
        // 1c7: tableswitch -103 0 10 -308 -172 -103 -90 -84 -116 -72 -53 -59 -39 -46
        // 200: ldc "WHAT"
        // 202: putstatic pack/tests/reflects/annot/annoe.fail Ljava/lang/String;
        // 205: return
    }
}
