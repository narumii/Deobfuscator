package pack.tests.reflects.retrace;

public class Tracer {
    public void run() throws Exception {
        new Tracee().toTrace(5);
        if (Tracee.p == 5) {
            System.out.println("PASS");
        } else {
            System.out.println("FAIL");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "#ຼ+:V(ຼY:ฬ<"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 7
        // 00c: swap
        // 00d: bipush 4
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 4
        // 012: swap
        // 013: bipush 7
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 4
        // 01b: swap
        // 01c: bipush 9
        // 01e: caload
        // 01f: aload 0
        // 020: dup
        // 021: bipush 9
        // 023: swap
        // 024: bipush 4
        // 025: caload
        // 026: castore
        // 027: castore
        // 028: aload 0
        // 029: dup
        // 02a: bipush 4
        // 02b: swap
        // 02c: bipush 0
        // 02d: caload
        // 02e: aload 0
        // 02f: dup
        // 030: bipush 0
        // 031: swap
        // 032: bipush 4
        // 033: caload
        // 034: castore
        // 035: castore
        // 036: aload 0
        // 037: dup
        // 038: bipush 4
        // 039: swap
        // 03a: bipush 20
        // 03c: caload
        // 03d: aload 0
        // 03e: dup
        // 03f: bipush 20
        // 041: swap
        // 042: bipush 4
        // 043: caload
        // 044: castore
        // 045: castore
        // 046: bipush 0
        // 047: istore 3
        // 048: goto 14c
        // 04b: astore 3
        // 04c: aload 3
        // 04d: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 050: bipush 0
        // 051: aaload
        // 052: astore 4
        // 054: aload 4
        // 056: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 059: invokevirtual java/lang/String.hashCode ()I
        // 05c: ldc 65535
        // 05e: iand
        // 05f: istore 5
        // 061: aload 4
        // 063: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 066: invokevirtual java/lang/String.toCharArray ()[C
        // 069: astore 6
        // 06b: aload 0
        // 06c: iload 1
        // 06d: iinc 1 1
        // 070: caload
        // 071: sipush 135
        // 074: ixor
        // 075: iload 5
        // 077: ixor
        // 078: anewarray 46
        // 07b: astore 7
        // 07d: bipush 0
        // 07e: istore 8
        // 080: aload 0
        // 081: iload 1
        // 082: iinc 1 1
        // 085: caload
        // 086: bipush 17
        // 088: ixor
        // 089: iload 5
        // 08b: ixor
        // 08c: istore 2
        // 08d: iload 2
        // 08e: newarray 5
        // 090: astore 9
        // 092: bipush 0
        // 093: istore 10
        // 095: iload 2
        // 096: ifle 12d
        // 099: aload 0
        // 09a: iload 1
        // 09b: caload
        // 09c: istore 11
        // 09e: aload 6
        // 0a0: iload 1
        // 0a1: aload 6
        // 0a3: arraylength
        // 0a4: irem
        // 0a5: caload
        // 0a6: sipush 165
        // 0a9: ixor
        // 0aa: lookupswitch 109 12 139 255 192 165 195 197 196 203 198 222 201 248 206 262 209 178 213 209 214 228 215 241 241 184
        // 114: nop
        // 115: nop
        // 116: athrow
        // 117: aload 9
        // 119: iload 10
        // 11b: iload 11
        // 11d: castore
        // 11e: iinc 10 1
        // 121: iinc 1 1
        // 124: iinc 2 -1
        // 127: bipush 0
        // 128: istore 12
        // 12a: goto 1ba
        // 12d: aload 7
        // 12f: iload 8
        // 131: iinc 8 1
        // 134: new java/lang/String
        // 137: dup
        // 138: aload 9
        // 13a: invokespecial java/lang/String.<init> ([C)V
        // 13d: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 140: aastore
        // 141: iload 1
        // 142: aload 0
        // 143: arraylength
        // 144: if_icmplt 080
        // 147: aload 7
        // 149: putstatic pack/tests/reflects/retrace/Tracer.catch [Ljava/lang/String;
        // 14c: goto 1f4
        // 14f: iload 11
        // 151: bipush 123
        // 153: ixor
        // 154: istore 11
        // 156: bipush 1
        // 157: istore 12
        // 159: goto 1ba
        // 15c: bipush 2
        // 15d: istore 12
        // 15f: goto 1ba
        // 162: iload 11
        // 164: bipush -104
        // 166: ixor
        // 167: istore 11
        // 169: bipush 1
        // 16a: istore 12
        // 16c: goto 1ba
        // 16f: bipush 3
        // 170: istore 12
        // 172: goto 1ba
        // 175: bipush 4
        // 176: istore 12
        // 178: goto 1ba
        // 17b: iload 11
        // 17d: bipush 112
        // 17f: ixor
        // 180: istore 11
        // 182: bipush 1
        // 183: istore 12
        // 185: goto 1ba
        // 188: bipush 5
        // 189: istore 12
        // 18b: goto 1ba
        // 18e: iload 11
        // 190: bipush 16
        // 192: ixor
        // 193: istore 11
        // 195: bipush 1
        // 196: istore 12
        // 198: goto 1ba
        // 19b: bipush 6
        // 19d: istore 12
        // 19f: goto 1ba
        // 1a2: bipush 7
        // 1a4: istore 12
        // 1a6: goto 1ba
        // 1a9: bipush 8
        // 1ab: istore 12
        // 1ad: goto 1ba
        // 1b0: bipush 9
        // 1b2: istore 12
        // 1b4: goto 1ba
        // 1b7: goto 04b
        // 1ba: iload 12
        // 1bc: tableswitch -96 0 9 -295 -165 -109 -96 -77 -71 -90 -65 -26 -52
        // 1f4: return
    }
}
