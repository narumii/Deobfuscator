package pack.tests.reflects.loader;

public class LRun {
    public void run() throws Exception {
        Loader l = new Loader();
        Class<?> c = l.findClass("pack.tests.reflects.loader.LTest");
        Object o = c.newInstance();
        c.getMethod("run").invoke(o);
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "2\ufff1ￗ\uffd0ﾠ\u0efdￕ'%-￠\uffd1\uffc0ﾽ2ￖﾢ4#ﾨ*\uffc0ﾭ๒ￖﾋﾋﾡ'ﾔ\uffc0ￗ￠￩ໞﾫ5\uffd1"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 1
        // 00b: swap
        // 00c: bipush 34
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 34
        // 013: swap
        // 014: bipush 1
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 16
        // 01c: swap
        // 01d: bipush 26
        // 01f: caload
        // 020: aload 0
        // 021: dup
        // 022: bipush 26
        // 024: swap
        // 025: bipush 16
        // 027: caload
        // 028: castore
        // 029: castore
        // 02a: aload 0
        // 02b: dup
        // 02c: bipush 23
        // 02e: swap
        // 02f: bipush 0
        // 030: caload
        // 031: aload 0
        // 032: dup
        // 033: bipush 0
        // 034: swap
        // 035: bipush 23
        // 037: caload
        // 038: castore
        // 039: castore
        // 03a: aload 0
        // 03b: dup
        // 03c: bipush 15
        // 03e: swap
        // 03f: bipush 52
        // 041: caload
        // 042: aload 0
        // 043: dup
        // 044: bipush 52
        // 046: swap
        // 047: bipush 15
        // 049: caload
        // 04a: castore
        // 04b: castore
        // 04c: bipush 0
        // 04d: istore 3
        // 04e: goto 17c
        // 051: astore 3
        // 052: aload 3
        // 053: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 056: bipush 0
        // 057: aaload
        // 058: astore 4
        // 05a: aload 4
        // 05c: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 05f: invokevirtual java/lang/String.hashCode ()I
        // 062: ldc 65535
        // 064: iand
        // 065: istore 5
        // 067: aload 4
        // 069: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 06c: invokevirtual java/lang/String.toCharArray ()[C
        // 06f: astore 6
        // 071: aload 0
        // 072: iload 1
        // 073: iinc 1 1
        // 076: caload
        // 077: sipush 249
        // 07a: ixor
        // 07b: iload 5
        // 07d: ixor
        // 07e: anewarray 52
        // 081: astore 7
        // 083: bipush 0
        // 084: istore 8
        // 086: aload 0
        // 087: iload 1
        // 088: iinc 1 1
        // 08b: caload
        // 08c: bipush 116
        // 08e: ixor
        // 08f: iload 5
        // 091: ixor
        // 092: istore 2
        // 093: iload 2
        // 094: newarray 5
        // 096: astore 9
        // 098: bipush 0
        // 099: istore 10
        // 09b: iload 2
        // 09c: ifle 15d
        // 09f: aload 0
        // 0a0: iload 1
        // 0a1: caload
        // 0a2: istore 11
        // 0a4: aload 6
        // 0a6: iload 1
        // 0a7: aload 6
        // 0a9: arraylength
        // 0aa: irem
        // 0ab: caload
        // 0ac: sipush 208
        // 0af: ixor
        // 0b0: lookupswitch 151 17 130 226 156 318 160 207 162 220 163 239 164 245 165 251 177 264 179 277 180 283 181 290 182 297 187 304 188 311 190 332 191 339 254 325
        // 144: nop
        // 145: nop
        // 146: athrow
        // 147: aload 9
        // 149: iload 10
        // 14b: iload 11
        // 14d: castore
        // 14e: iinc 10 1
        // 151: iinc 1 1
        // 154: iinc 2 -1
        // 157: bipush 0
        // 158: istore 12
        // 15a: goto 20d
        // 15d: aload 7
        // 15f: iload 8
        // 161: iinc 8 1
        // 164: new java/lang/String
        // 167: dup
        // 168: aload 9
        // 16a: invokespecial java/lang/String.<init> ([C)V
        // 16d: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 170: aastore
        // 171: iload 1
        // 172: aload 0
        // 173: arraylength
        // 174: if_icmplt 086
        // 177: aload 7
        // 179: putstatic pack/tests/reflects/loader/LRun.catch [Ljava/lang/String;
        // 17c: goto 258
        // 17f: iload 11
        // 181: bipush -91
        // 183: ixor
        // 184: istore 11
        // 186: bipush 1
        // 187: istore 12
        // 189: goto 20d
        // 18c: bipush 2
        // 18d: istore 12
        // 18f: goto 20d
        // 192: iload 11
        // 194: bipush 70
        // 196: ixor
        // 197: istore 11
        // 199: bipush 1
        // 19a: istore 12
        // 19c: goto 20d
        // 19f: bipush 3
        // 1a0: istore 12
        // 1a2: goto 20d
        // 1a5: bipush 4
        // 1a6: istore 12
        // 1a8: goto 20d
        // 1ab: iload 11
        // 1ad: bipush -16
        // 1af: ixor
        // 1b0: istore 11
        // 1b2: bipush 1
        // 1b3: istore 12
        // 1b5: goto 20d
        // 1b8: iload 11
        // 1ba: bipush -50
        // 1bc: ixor
        // 1bd: istore 11
        // 1bf: bipush 1
        // 1c0: istore 12
        // 1c2: goto 20d
        // 1c5: bipush 5
        // 1c6: istore 12
        // 1c8: goto 20d
        // 1cb: bipush 6
        // 1cd: istore 12
        // 1cf: goto 20d
        // 1d2: bipush 7
        // 1d4: istore 12
        // 1d6: goto 20d
        // 1d9: bipush 8
        // 1db: istore 12
        // 1dd: goto 20d
        // 1e0: bipush 9
        // 1e2: istore 12
        // 1e4: goto 20d
        // 1e7: bipush 10
        // 1e9: istore 12
        // 1eb: goto 20d
        // 1ee: bipush 11
        // 1f0: istore 12
        // 1f2: goto 20d
        // 1f5: bipush 12
        // 1f7: istore 12
        // 1f9: goto 20d
        // 1fc: bipush 13
        // 1fe: istore 12
        // 200: goto 20d
        // 203: bipush 14
        // 205: istore 12
        // 207: goto 20d
        // 20a: goto 051
        // 20d: iload 12
        // 20f: tableswitch -372 0 14 -372 -200 -144 -125 -112 -131 -106 -74 -87 -61 -68 -54 -33 -47 -19
        // 258: return
    }
}
