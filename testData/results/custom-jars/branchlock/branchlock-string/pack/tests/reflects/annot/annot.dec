package pack.tests.reflects.annot;

import java.lang.reflect.Method;

public class annot {
    public void run() throws Exception {
        annoe a = new annoe();

        for (Method m : annoe.class.getDeclaredMethods()) {
            m.setAccessible(true);
            anno an = m.getAnnotation(anno.class);
            if (an != null && an.val().equals("yes")) {
                m.invoke(a);
            }
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "￩๙\u0011๖\ufff4"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 3
        // 00b: swap
        // 00c: bipush 0
        // 00d: caload
        // 00e: aload 0
        // 00f: dup
        // 010: bipush 0
        // 011: swap
        // 012: bipush 3
        // 013: caload
        // 014: castore
        // 015: castore
        // 016: aload 0
        // 017: dup
        // 018: bipush 1
        // 019: swap
        // 01a: bipush 8
        // 01c: caload
        // 01d: aload 0
        // 01e: dup
        // 01f: bipush 8
        // 021: swap
        // 022: bipush 1
        // 023: caload
        // 024: castore
        // 025: castore
        // 026: aload 0
        // 027: dup
        // 028: bipush 4
        // 029: swap
        // 02a: bipush 0
        // 02b: caload
        // 02c: aload 0
        // 02d: dup
        // 02e: bipush 0
        // 02f: swap
        // 030: bipush 4
        // 031: caload
        // 032: castore
        // 033: castore
        // 034: bipush 0
        // 035: istore 3
        // 036: goto 144
        // 039: astore 3
        // 03a: aload 3
        // 03b: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 03e: bipush 0
        // 03f: aaload
        // 040: astore 4
        // 042: aload 4
        // 044: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 047: invokevirtual java/lang/String.hashCode ()I
        // 04a: ldc 65535
        // 04c: iand
        // 04d: istore 5
        // 04f: aload 4
        // 051: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 054: invokevirtual java/lang/String.toCharArray ()[C
        // 057: astore 6
        // 059: aload 0
        // 05a: iload 1
        // 05b: iinc 1 1
        // 05e: caload
        // 05f: sipush 254
        // 062: ixor
        // 063: iload 5
        // 065: ixor
        // 066: anewarray 43
        // 069: astore 7
        // 06b: bipush 0
        // 06c: istore 8
        // 06e: aload 0
        // 06f: iload 1
        // 070: iinc 1 1
        // 073: caload
        // 074: sipush 243
        // 077: ixor
        // 078: iload 5
        // 07a: ixor
        // 07b: istore 2
        // 07c: iload 2
        // 07d: newarray 5
        // 07f: astore 9
        // 081: bipush 0
        // 082: istore 10
        // 084: iload 2
        // 085: ifle 125
        // 088: aload 0
        // 089: iload 1
        // 08a: caload
        // 08b: istore 11
        // 08d: aload 6
        // 08f: iload 1
        // 090: aload 6
        // 092: arraylength
        // 093: irem
        // 094: caload
        // 095: bipush 76
        // 097: ixor
        // 098: lookupswitch 119 13 32 175 34 201 35 207 39 220 41 226 42 232 45 238 47 245 56 258 60 265 62 272 63 279 98 188
        // 10c: nop
        // 10d: nop
        // 10e: athrow
        // 10f: aload 9
        // 111: iload 10
        // 113: iload 11
        // 115: castore
        // 116: iinc 10 1
        // 119: iinc 1 1
        // 11c: iinc 2 -1
        // 11f: bipush 0
        // 120: istore 12
        // 122: goto 1b9
        // 125: aload 7
        // 127: iload 8
        // 129: iinc 8 1
        // 12c: new java/lang/String
        // 12f: dup
        // 130: aload 9
        // 132: invokespecial java/lang/String.<init> ([C)V
        // 135: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 138: aastore
        // 139: iload 1
        // 13a: aload 0
        // 13b: arraylength
        // 13c: if_icmplt 06e
        // 13f: aload 7
        // 141: putstatic pack/tests/reflects/annot/annot.catch [Ljava/lang/String;
        // 144: goto 1f4
        // 147: iload 11
        // 149: bipush 29
        // 14b: ixor
        // 14c: istore 11
        // 14e: bipush 1
        // 14f: istore 12
        // 151: goto 1b9
        // 154: iload 11
        // 156: bipush -121
        // 158: ixor
        // 159: istore 11
        // 15b: bipush 1
        // 15c: istore 12
        // 15e: goto 1b9
        // 161: bipush 2
        // 162: istore 12
        // 164: goto 1b9
        // 167: iload 11
        // 169: bipush -116
        // 16b: ixor
        // 16c: istore 11
        // 16e: bipush 1
        // 16f: istore 12
        // 171: goto 1b9
        // 174: bipush 3
        // 175: istore 12
        // 177: goto 1b9
        // 17a: bipush 4
        // 17b: istore 12
        // 17d: goto 1b9
        // 180: bipush 5
        // 181: istore 12
        // 183: goto 1b9
        // 186: bipush 6
        // 188: istore 12
        // 18a: goto 1b9
        // 18d: iload 11
        // 18f: bipush 104
        // 191: ixor
        // 192: istore 11
        // 194: bipush 1
        // 195: istore 12
        // 197: goto 1b9
        // 19a: bipush 7
        // 19c: istore 12
        // 19e: goto 1b9
        // 1a1: bipush 8
        // 1a3: istore 12
        // 1a5: goto 1b9
        // 1a8: bipush 9
        // 1aa: istore 12
        // 1ac: goto 1b9
        // 1af: bipush 10
        // 1b1: istore 12
        // 1b3: goto 1b9
        // 1b6: goto 039
        // 1b9: iload 12
        // 1bb: tableswitch -84 0 10 -311 -172 -116 -84 -90 -71 -65 -103 -46 -33 -26
        // 1f4: return
    }
}
