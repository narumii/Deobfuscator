package pack.tests.reflects.annot;

import java.lang.reflect.Method;

public class annot {
    public String BRANCHLOCK_DOT_NET_DEMO;

    public annot(int var1) {
    }

    public void run(int var1) {
        annoe var2 = new annoe(10261);

        for (Method var6 : annoe.class.getDeclaredMethods()) {
            var6.setAccessible(true);
            anno var7 = var6.getAnnotation(anno.class);
            if (var7 != null && var7.val().equals("yes")) {
                var6.invoke(var2);
            }
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "ฐฤ\u001cﾂ\u0016"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 0
        // 00b: swap
        // 00c: bipush 0
        // 00d: caload
        // 00e: aload 0
        // 00f: dup
        // 010: bipush 0
        // 011: swap
        // 012: bipush 0
        // 013: caload
        // 014: castore
        // 015: castore
        // 016: aload 0
        // 017: dup
        // 018: bipush 1
        // 019: swap
        // 01a: bipush 9
        // 01c: caload
        // 01d: aload 0
        // 01e: dup
        // 01f: bipush 9
        // 021: swap
        // 022: bipush 1
        // 023: caload
        // 024: castore
        // 025: castore
        // 026: aload 0
        // 027: dup
        // 028: bipush 2
        // 029: swap
        // 02a: bipush 0
        // 02b: caload
        // 02c: aload 0
        // 02d: dup
        // 02e: bipush 0
        // 02f: swap
        // 030: bipush 2
        // 031: caload
        // 032: castore
        // 033: castore
        // 034: goto 13d
        // 037: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 03a: bipush 0
        // 03b: aaload
        // 03c: astore 4
        // 03e: aload 4
        // 040: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 043: invokevirtual java/lang/String.hashCode ()I
        // 046: ldc 65535
        // 048: iand
        // 049: istore 5
        // 04b: aload 4
        // 04d: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 050: invokevirtual java/lang/String.toCharArray ()[C
        // 053: astore 6
        // 055: aload 0
        // 056: iload 1
        // 057: iinc 1 1
        // 05a: caload
        // 05b: sipush 184
        // 05e: ixor
        // 05f: iload 5
        // 061: ixor
        // 062: anewarray 42
        // 065: astore 7
        // 067: bipush 0
        // 068: istore 8
        // 06a: aload 0
        // 06b: iload 1
        // 06c: iinc 1 1
        // 06f: caload
        // 070: sipush 142
        // 073: ixor
        // 074: iload 5
        // 076: ixor
        // 077: istore 2
        // 078: iload 2
        // 079: newarray 5
        // 07b: astore 9
        // 07d: bipush 0
        // 07e: istore 10
        // 080: iload 2
        // 081: ifle 11e
        // 084: aload 0
        // 085: iload 1
        // 086: caload
        // 087: istore 11
        // 089: aload 6
        // 08b: iload 1
        // 08c: aload 6
        // 08e: arraylength
        // 08f: irem
        // 090: caload
        // 091: sipush 210
        // 094: ixor
        // 095: lookupswitch 115 13 160 171 161 184 162 197 166 210 177 223 179 229 180 235 183 241 185 247 188 261 189 268 190 275 252 254
        // 108: aload 9
        // 10a: iload 10
        // 10c: iload 11
        // 10e: castore
        // 10f: iinc 10 1
        // 112: iinc 1 1
        // 115: iinc 2 -1
        // 118: bipush 0
        // 119: istore 12
        // 11b: goto 1b2
        // 11e: aload 7
        // 120: iload 8
        // 122: iinc 8 1
        // 125: new java/lang/String
        // 128: dup
        // 129: aload 9
        // 12b: invokespecial java/lang/String.<init> ([C)V
        // 12e: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 131: aastore
        // 132: iload 1
        // 133: aload 0
        // 134: arraylength
        // 135: if_icmplt 06a
        // 138: aload 7
        // 13a: putstatic pack/tests/reflects/annot/annot.d [Ljava/lang/String;
        // 13d: goto 1f0
        // 140: iload 11
        // 142: bipush 16
        // 144: ixor
        // 145: istore 11
        // 147: bipush 1
        // 148: istore 12
        // 14a: goto 1b2
        // 14d: iload 11
        // 14f: bipush -25
        // 151: ixor
        // 152: istore 11
        // 154: bipush 1
        // 155: istore 12
        // 157: goto 1b2
        // 15a: iload 11
        // 15c: bipush -52
        // 15e: ixor
        // 15f: istore 11
        // 161: bipush 1
        // 162: istore 12
        // 164: goto 1b2
        // 167: iload 11
        // 169: bipush 101
        // 16b: ixor
        // 16c: istore 11
        // 16e: bipush 1
        // 16f: istore 12
        // 171: goto 1b2
        // 174: bipush 2
        // 175: istore 12
        // 177: goto 1b2
        // 17a: bipush 3
        // 17b: istore 12
        // 17d: goto 1b2
        // 180: bipush 4
        // 181: istore 12
        // 183: goto 1b2
        // 186: bipush 5
        // 187: istore 12
        // 189: goto 1b2
        // 18c: bipush 6
        // 18e: istore 12
        // 190: goto 1b2
        // 193: bipush 7
        // 195: istore 12
        // 197: goto 1b2
        // 19a: bipush 8
        // 19c: istore 12
        // 19e: goto 1b2
        // 1a1: bipush 9
        // 1a3: istore 12
        // 1a5: goto 1b2
        // 1a8: bipush 10
        // 1aa: istore 12
        // 1ac: goto 1b2
        // 1af: goto 037
        // 1b2: iload 12
        // 1b4: tableswitch -103 0 10 -308 -172 -77 -103 -64 -58 -46 -52 -116 -90 -40
        // 1f0: return
    }
}
