package pack.tests.reflects.retrace;

public class Tracer {
    public int BRANCHLOCK_DOT_NET_DEMO;

    public Tracer(int var1) {
    }

    public void run(int var1) {
        new Tracee(5704).toTrace(5);
        if (Tracee.p == 5) {
            System.out.println("PASS");
        } else {
            System.out.println("FAIL");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "tf\u0e83\ufff8wງ\u0e83ﾓtﾜh"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 1
        // 00b: swap
        // 00c: bipush 2
        // 00d: caload
        // 00e: aload 0
        // 00f: dup
        // 010: bipush 2
        // 011: swap
        // 012: bipush 1
        // 013: caload
        // 014: castore
        // 015: castore
        // 016: aload 0
        // 017: dup
        // 018: bipush 8
        // 01a: swap
        // 01b: bipush 2
        // 01c: caload
        // 01d: aload 0
        // 01e: dup
        // 01f: bipush 2
        // 020: swap
        // 021: bipush 8
        // 023: caload
        // 024: castore
        // 025: castore
        // 026: aload 0
        // 027: dup
        // 028: bipush 5
        // 029: swap
        // 02a: bipush 0
        // 02b: caload
        // 02c: aload 0
        // 02d: dup
        // 02e: bipush 0
        // 02f: swap
        // 030: bipush 5
        // 031: caload
        // 032: castore
        // 033: castore
        // 034: aload 0
        // 035: dup
        // 036: bipush 0
        // 037: swap
        // 038: bipush 20
        // 03a: caload
        // 03b: aload 0
        // 03c: dup
        // 03d: bipush 20
        // 03f: swap
        // 040: bipush 0
        // 041: caload
        // 042: castore
        // 043: castore
        // 044: goto 141
        // 047: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 04a: bipush 0
        // 04b: aaload
        // 04c: astore 4
        // 04e: aload 4
        // 050: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 053: invokevirtual java/lang/String.hashCode ()I
        // 056: ldc 65535
        // 058: iand
        // 059: istore 5
        // 05b: aload 4
        // 05d: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 060: invokevirtual java/lang/String.toCharArray ()[C
        // 063: astore 6
        // 065: aload 0
        // 066: iload 1
        // 067: iinc 1 1
        // 06a: caload
        // 06b: bipush 44
        // 06d: ixor
        // 06e: iload 5
        // 070: ixor
        // 071: anewarray 43
        // 074: astore 7
        // 076: bipush 0
        // 077: istore 8
        // 079: aload 0
        // 07a: iload 1
        // 07b: iinc 1 1
        // 07e: caload
        // 07f: bipush 46
        // 081: ixor
        // 082: iload 5
        // 084: ixor
        // 085: istore 2
        // 086: iload 2
        // 087: newarray 5
        // 089: astore 9
        // 08b: bipush 0
        // 08c: istore 10
        // 08e: iload 2
        // 08f: ifle 122
        // 092: aload 0
        // 093: iload 1
        // 094: caload
        // 095: istore 11
        // 097: aload 6
        // 099: iload 1
        // 09a: aload 6
        // 09c: arraylength
        // 09d: irem
        // 09e: caload
        // 09f: bipush 67
        // 0a1: ixor
        // 0a2: lookupswitch 106 12 23 238 32 162 34 194 37 213 38 219 40 245 47 259 48 175 49 188 51 207 55 225 109 252
        // 10c: aload 9
        // 10e: iload 10
        // 110: iload 11
        // 112: castore
        // 113: iinc 10 1
        // 116: iinc 1 1
        // 119: iinc 2 -1
        // 11c: bipush 0
        // 11d: istore 12
        // 11f: goto 1af
        // 122: aload 7
        // 124: iload 8
        // 126: iinc 8 1
        // 129: new java/lang/String
        // 12c: dup
        // 12d: aload 9
        // 12f: invokespecial java/lang/String.<init> ([C)V
        // 132: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 135: aastore
        // 136: iload 1
        // 137: aload 0
        // 138: arraylength
        // 139: if_icmplt 079
        // 13c: aload 7
        // 13e: putstatic pack/tests/reflects/retrace/Tracer.d [Ljava/lang/String;
        // 141: goto 1e8
        // 144: iload 11
        // 146: bipush 36
        // 148: ixor
        // 149: istore 11
        // 14b: bipush 1
        // 14c: istore 12
        // 14e: goto 1af
        // 151: iload 11
        // 153: bipush -43
        // 155: ixor
        // 156: istore 11
        // 158: bipush 1
        // 159: istore 12
        // 15b: goto 1af
        // 15e: bipush 2
        // 15f: istore 12
        // 161: goto 1af
        // 164: iload 11
        // 166: bipush -71
        // 168: ixor
        // 169: istore 11
        // 16b: bipush 1
        // 16c: istore 12
        // 16e: goto 1af
        // 171: bipush 3
        // 172: istore 12
        // 174: goto 1af
        // 177: bipush 4
        // 178: istore 12
        // 17a: goto 1af
        // 17d: bipush 5
        // 17e: istore 12
        // 180: goto 1af
        // 183: iload 11
        // 185: bipush 39
        // 187: ixor
        // 188: istore 11
        // 18a: bipush 1
        // 18b: istore 12
        // 18d: goto 1af
        // 190: bipush 6
        // 192: istore 12
        // 194: goto 1af
        // 197: bipush 7
        // 199: istore 12
        // 19b: goto 1af
        // 19e: bipush 8
        // 1a0: istore 12
        // 1a2: goto 1af
        // 1a5: bipush 9
        // 1a7: istore 12
        // 1a9: goto 1af
        // 1ac: goto 047
        // 1af: iload 12
        // 1b1: tableswitch -64 0 9 -291 -165 -109 -96 -64 -77 -58 -52 -83 -46
        // 1e8: return
    }
}
