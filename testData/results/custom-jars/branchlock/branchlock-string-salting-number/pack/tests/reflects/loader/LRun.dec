package pack.tests.reflects.loader;

public class LRun {
    public int BRANCHLOCK_DOT_NET_DEMO;

    public LRun(int var1) {
    }

    public void run(int var1) {
        Loader var2 = new Loader(12270);
        Class var3 = var2.findClass("pack.tests.reflects.loader.LTest");
        Object var4 = var3.newInstance();
        var3.getMethod("run").invoke(var4);
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "Tๅ\r-EM\bRCHR\u000e\b\uffff￨@\u0011CER\ufffe\b￡￢G\u0019CSS\u0000\u0018\u0018\ufffe\t\u0e66ສTU"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 36
        // 00c: swap
        // 00d: bipush 27
        // 00f: caload
        // 010: aload 0
        // 011: dup
        // 012: bipush 27
        // 014: swap
        // 015: bipush 36
        // 017: caload
        // 018: castore
        // 019: castore
        // 01a: aload 0
        // 01b: dup
        // 01c: bipush 37
        // 01e: swap
        // 01f: bipush 9
        // 021: caload
        // 022: aload 0
        // 023: dup
        // 024: bipush 9
        // 026: swap
        // 027: bipush 37
        // 029: caload
        // 02a: castore
        // 02b: castore
        // 02c: aload 0
        // 02d: dup
        // 02e: bipush 35
        // 030: swap
        // 031: bipush 0
        // 032: caload
        // 033: aload 0
        // 034: dup
        // 035: bipush 0
        // 036: swap
        // 037: bipush 35
        // 039: caload
        // 03a: castore
        // 03b: castore
        // 03c: aload 0
        // 03d: dup
        // 03e: bipush 32
        // 040: swap
        // 041: bipush 64
        // 043: caload
        // 044: aload 0
        // 045: dup
        // 046: bipush 64
        // 048: swap
        // 049: bipush 32
        // 04b: caload
        // 04c: castore
        // 04d: castore
        // 04e: goto 175
        // 051: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 054: bipush 0
        // 055: aaload
        // 056: astore 4
        // 058: aload 4
        // 05a: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 05d: invokevirtual java/lang/String.hashCode ()I
        // 060: ldc 65535
        // 062: iand
        // 063: istore 5
        // 065: aload 4
        // 067: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 06a: invokevirtual java/lang/String.toCharArray ()[C
        // 06d: astore 6
        // 06f: aload 0
        // 070: iload 1
        // 071: iinc 1 1
        // 074: caload
        // 075: bipush 1
        // 076: ixor
        // 077: iload 5
        // 079: ixor
        // 07a: anewarray 44
        // 07d: astore 7
        // 07f: bipush 0
        // 080: istore 8
        // 082: aload 0
        // 083: iload 1
        // 084: iinc 1 1
        // 087: caload
        // 088: sipush 204
        // 08b: ixor
        // 08c: iload 5
        // 08e: ixor
        // 08f: istore 2
        // 090: iload 2
        // 091: newarray 5
        // 093: astore 9
        // 095: bipush 0
        // 096: istore 10
        // 098: iload 2
        // 099: ifle 156
        // 09c: aload 0
        // 09d: iload 1
        // 09e: caload
        // 09f: istore 11
        // 0a1: aload 6
        // 0a3: iload 1
        // 0a4: aload 6
        // 0a6: arraylength
        // 0a7: irem
        // 0a8: caload
        // 0a9: sipush 134
        // 0ac: ixor
        // 0ad: lookupswitch 147 17 168 254 202 286 212 321 224 203 226 216 227 222 229 235 231 248 232 260 233 273 234 279 237 293 242 300 243 307 244 314 245 328 246 335
        // 140: aload 9
        // 142: iload 10
        // 144: iload 11
        // 146: castore
        // 147: iinc 10 1
        // 14a: iinc 1 1
        // 14d: iinc 2 -1
        // 150: bipush 0
        // 151: istore 12
        // 153: goto 206
        // 156: aload 7
        // 158: iload 8
        // 15a: iinc 8 1
        // 15d: new java/lang/String
        // 160: dup
        // 161: aload 9
        // 163: invokespecial java/lang/String.<init> ([C)V
        // 166: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 169: aastore
        // 16a: iload 1
        // 16b: aload 0
        // 16c: arraylength
        // 16d: if_icmplt 082
        // 170: aload 7
        // 172: putstatic pack/tests/reflects/loader/LRun.d [Ljava/lang/String;
        // 175: goto 254
        // 178: iload 11
        // 17a: bipush -115
        // 17c: ixor
        // 17d: istore 11
        // 17f: bipush 1
        // 180: istore 12
        // 182: goto 206
        // 185: bipush 2
        // 186: istore 12
        // 188: goto 206
        // 18b: iload 11
        // 18d: bipush 38
        // 18f: ixor
        // 190: istore 11
        // 192: bipush 1
        // 193: istore 12
        // 195: goto 206
        // 198: iload 11
        // 19a: bipush 125
        // 19c: ixor
        // 19d: istore 11
        // 19f: bipush 1
        // 1a0: istore 12
        // 1a2: goto 206
        // 1a5: bipush 3
        // 1a6: istore 12
        // 1a8: goto 206
        // 1ab: bipush 4
        // 1ac: istore 12
        // 1ae: goto 206
        // 1b1: iload 11
        // 1b3: bipush 76
        // 1b5: ixor
        // 1b6: istore 11
        // 1b8: bipush 1
        // 1b9: istore 12
        // 1bb: goto 206
        // 1be: bipush 5
        // 1bf: istore 12
        // 1c1: goto 206
        // 1c4: bipush 6
        // 1c6: istore 12
        // 1c8: goto 206
        // 1cb: bipush 7
        // 1cd: istore 12
        // 1cf: goto 206
        // 1d2: bipush 8
        // 1d4: istore 12
        // 1d6: goto 206
        // 1d9: bipush 9
        // 1db: istore 12
        // 1dd: goto 206
        // 1e0: bipush 10
        // 1e2: istore 12
        // 1e4: goto 206
        // 1e7: bipush 11
        // 1e9: istore 12
        // 1eb: goto 206
        // 1ee: bipush 12
        // 1f0: istore 12
        // 1f2: goto 206
        // 1f5: bipush 13
        // 1f7: istore 12
        // 1f9: goto 206
        // 1fc: bipush 14
        // 1fe: istore 12
        // 200: goto 206
        // 203: goto 051
        // 206: iload 12
        // 208: tableswitch -112 0 14 -368 -200 -144 -131 -125 -93 -99 -74 -87 -61 -54 -112 -33 -47 -26
        // 254: return
    }
}
