package pack.tests.reflects.loader;

import java.io.ByteArrayOutputStream;
import java.io.InputStream;

public class LTest {
    public int BRANCHLOCK_DOT_NET_DEMO;

    public LTest(int var1) {
    }

    public static byte[] readAllBytes(InputStream var0, int var1) {
        ByteArrayOutputStream var2 = new ByteArrayOutputStream();
        byte[] var3 = new byte[var1 ^ 27268];

        int var4;
        while ((var4 = var0.read(var3)) != (var1 ^ -28293)) {
            var2.write(var3, 0, var4);
        }

        return var2.toByteArray();
    }

    public void run(int var1) {
        System.out.println(new String(readAllBytes(LTest.class.getResourceAsStream(d[var1 ^ 12433]), (var1 | var1 ^ 32405) & (var1 ^ 24447))));
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "6\u0efb\u000bￓํￂ"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 4
        // 00b: swap
        // 00c: bipush 0
        // 00d: caload
        // 00e: aload 0
        // 00f: dup
        // 010: bipush 0
        // 011: swap
        // 012: bipush 4
        // 013: caload
        // 014: castore
        // 015: castore
        // 016: aload 0
        // 017: dup
        // 018: bipush 3
        // 019: swap
        // 01a: bipush 7
        // 01c: caload
        // 01d: aload 0
        // 01e: dup
        // 01f: bipush 7
        // 021: swap
        // 022: bipush 3
        // 023: caload
        // 024: castore
        // 025: castore
        // 026: goto 13d
        // 029: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 02c: bipush 0
        // 02d: aaload
        // 02e: astore 4
        // 030: aload 4
        // 032: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 035: invokevirtual java/lang/String.hashCode ()I
        // 038: ldc 65535
        // 03a: iand
        // 03b: istore 5
        // 03d: aload 4
        // 03f: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 042: invokevirtual java/lang/String.toCharArray ()[C
        // 045: astore 6
        // 047: aload 0
        // 048: iload 1
        // 049: iinc 1 1
        // 04c: caload
        // 04d: sipush 229
        // 050: ixor
        // 051: iload 5
        // 053: ixor
        // 054: anewarray 41
        // 057: astore 7
        // 059: bipush 0
        // 05a: istore 8
        // 05c: aload 0
        // 05d: iload 1
        // 05e: iinc 1 1
        // 061: caload
        // 062: bipush 86
        // 064: ixor
        // 065: iload 5
        // 067: ixor
        // 068: istore 2
        // 069: iload 2
        // 06a: newarray 5
        // 06c: astore 9
        // 06e: bipush 0
        // 06f: istore 10
        // 071: iload 2
        // 072: ifle 11e
        // 075: aload 0
        // 076: iload 1
        // 077: caload
        // 078: istore 11
        // 07a: aload 6
        // 07c: iload 1
        // 07d: aload 6
        // 07f: arraylength
        // 080: irem
        // 081: caload
        // 082: sipush 217
        // 085: ixor
        // 086: lookupswitch 130 15 141 231 149 249 169 186 170 199 171 212 173 218 178 237 181 243 182 262 184 276 186 283 188 290 189 297 191 304 247 269
        // 108: aload 9
        // 10a: iload 10
        // 10c: iload 11
        // 10e: castore
        // 10f: iinc 10 1
        // 112: iinc 1 1
        // 115: iinc 2 -1
        // 118: bipush 0
        // 119: istore 12
        // 11b: goto 1c0
        // 11e: aload 7
        // 120: iload 8
        // 122: iinc 8 1
        // 125: new java/lang/String
        // 128: dup
        // 129: aload 9
        // 12b: invokespecial java/lang/String.<init> ([C)V
        // 12e: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 131: aastore
        // 132: iload 1
        // 133: aload 0
        // 134: arraylength
        // 135: if_icmplt 05c
        // 138: aload 7
        // 13a: putstatic pack/tests/reflects/loader/LTest.d [Ljava/lang/String;
        // 13d: goto 204
        // 140: iload 11
        // 142: bipush -52
        // 144: ixor
        // 145: istore 11
        // 147: bipush 1
        // 148: istore 12
        // 14a: goto 1c0
        // 14d: iload 11
        // 14f: bipush 101
        // 151: ixor
        // 152: istore 11
        // 154: bipush 1
        // 155: istore 12
        // 157: goto 1c0
        // 15a: bipush 2
        // 15b: istore 12
        // 15d: goto 1c0
        // 160: iload 11
        // 162: bipush -106
        // 164: ixor
        // 165: istore 11
        // 167: bipush 1
        // 168: istore 12
        // 16a: goto 1c0
        // 16d: bipush 3
        // 16e: istore 12
        // 170: goto 1c0
        // 173: bipush 4
        // 174: istore 12
        // 176: goto 1c0
        // 179: bipush 5
        // 17a: istore 12
        // 17c: goto 1c0
        // 17f: iload 11
        // 181: bipush 95
        // 183: ixor
        // 184: istore 11
        // 186: bipush 1
        // 187: istore 12
        // 189: goto 1c0
        // 18c: bipush 6
        // 18e: istore 12
        // 190: goto 1c0
        // 193: bipush 7
        // 195: istore 12
        // 197: goto 1c0
        // 19a: bipush 8
        // 19c: istore 12
        // 19e: goto 1c0
        // 1a1: bipush 9
        // 1a3: istore 12
        // 1a5: goto 1c0
        // 1a8: bipush 10
        // 1aa: istore 12
        // 1ac: goto 1c0
        // 1af: bipush 11
        // 1b1: istore 12
        // 1b3: goto 1c0
        // 1b6: bipush 12
        // 1b8: istore 12
        // 1ba: goto 1c0
        // 1bd: goto 029
        // 1c0: iload 12
        // 1c2: tableswitch -79 0 12 -337 -186 -130 -104 -98 -85 -79 -117 -54 -67 -40 -73 -33
        // 204: return
    }
}
