package pack.tests.basics.accu;

public class Digi {
    public String BRANCHLOCK_DOT_NET_DEMO;

    public Digi(int var1) {
    }

    public void run(int var1) {
        double var2 = 0.0;
        int var4 = 0;

        do {
            var2 += 1.0E-18;
        } while (++var4 <= 100 && (float)var2 != 2.0E-17F);

        if (var4 == 20) {
            System.out.println("PASS");
        } else {
            System.out.println("FAIL");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "ﾆธ\ufff6ﾉ￬ﾅฟﾗ￮ﾏธ\u0011\uffd0ຶ\ufff3"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 2
        // 00b: swap
        // 00c: bipush 13
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 13
        // 013: swap
        // 014: bipush 2
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 3
        // 01b: swap
        // 01c: bipush 7
        // 01e: caload
        // 01f: aload 0
        // 020: dup
        // 021: bipush 7
        // 023: swap
        // 024: bipush 3
        // 025: caload
        // 026: castore
        // 027: castore
        // 028: aload 0
        // 029: dup
        // 02a: bipush 2
        // 02b: swap
        // 02c: bipush 0
        // 02d: caload
        // 02e: aload 0
        // 02f: dup
        // 030: bipush 0
        // 031: swap
        // 032: bipush 2
        // 033: caload
        // 034: castore
        // 035: castore
        // 036: aload 0
        // 037: dup
        // 038: bipush 1
        // 039: swap
        // 03a: bipush 19
        // 03c: caload
        // 03d: aload 0
        // 03e: dup
        // 03f: bipush 19
        // 041: swap
        // 042: bipush 1
        // 043: caload
        // 044: castore
        // 045: castore
        // 046: goto 14d
        // 049: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 04c: bipush 0
        // 04d: aaload
        // 04e: astore 4
        // 050: aload 4
        // 052: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 055: invokevirtual java/lang/String.hashCode ()I
        // 058: ldc 65535
        // 05a: iand
        // 05b: istore 5
        // 05d: aload 4
        // 05f: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 062: invokevirtual java/lang/String.toCharArray ()[C
        // 065: astore 6
        // 067: aload 0
        // 068: iload 1
        // 069: iinc 1 1
        // 06c: caload
        // 06d: bipush 28
        // 06f: ixor
        // 070: iload 5
        // 072: ixor
        // 073: anewarray 36
        // 076: astore 7
        // 078: bipush 0
        // 079: istore 8
        // 07b: aload 0
        // 07c: iload 1
        // 07d: iinc 1 1
        // 080: caload
        // 081: sipush 181
        // 084: ixor
        // 085: iload 5
        // 087: ixor
        // 088: istore 2
        // 089: iload 2
        // 08a: newarray 5
        // 08c: astore 9
        // 08e: bipush 0
        // 08f: istore 10
        // 091: iload 2
        // 092: ifle 12e
        // 095: aload 0
        // 096: iload 1
        // 097: caload
        // 098: istore 11
        // 09a: aload 6
        // 09c: iload 1
        // 09d: aload 6
        // 09f: arraylength
        // 0a0: irem
        // 0a1: caload
        // 0a2: bipush 54
        // 0a4: ixor
        // 0a5: lookupswitch 115 13 24 261 66 171 67 184 69 190 70 203 81 209 83 228 84 234 85 241 87 248 93 268 95 275 114 222
        // 118: aload 9
        // 11a: iload 10
        // 11c: iload 11
        // 11e: castore
        // 11f: iinc 10 1
        // 122: iinc 1 1
        // 125: iinc 2 -1
        // 128: bipush 0
        // 129: istore 12
        // 12b: goto 1c2
        // 12e: aload 7
        // 130: iload 8
        // 132: iinc 8 1
        // 135: new java/lang/String
        // 138: dup
        // 139: aload 9
        // 13b: invokespecial java/lang/String.<init> ([C)V
        // 13e: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 141: aastore
        // 142: iload 1
        // 143: aload 0
        // 144: arraylength
        // 145: if_icmplt 07b
        // 148: aload 7
        // 14a: putstatic pack/tests/basics/accu/Digi.d [Ljava/lang/String;
        // 14d: goto 200
        // 150: iload 11
        // 152: bipush -42
        // 154: ixor
        // 155: istore 11
        // 157: bipush 1
        // 158: istore 12
        // 15a: goto 1c2
        // 15d: bipush 2
        // 15e: istore 12
        // 160: goto 1c2
        // 163: iload 11
        // 165: bipush -65
        // 167: ixor
        // 168: istore 11
        // 16a: bipush 1
        // 16b: istore 12
        // 16d: goto 1c2
        // 170: bipush 3
        // 171: istore 12
        // 173: goto 1c2
        // 176: iload 11
        // 178: bipush 87
        // 17a: ixor
        // 17b: istore 11
        // 17d: bipush 1
        // 17e: istore 12
        // 180: goto 1c2
        // 183: bipush 4
        // 184: istore 12
        // 186: goto 1c2
        // 189: bipush 5
        // 18a: istore 12
        // 18c: goto 1c2
        // 18f: bipush 6
        // 191: istore 12
        // 193: goto 1c2
        // 196: bipush 7
        // 198: istore 12
        // 19a: goto 1c2
        // 19d: iload 11
        // 19f: bipush -111
        // 1a1: ixor
        // 1a2: istore 11
        // 1a4: bipush 1
        // 1a5: istore 12
        // 1a7: goto 1c2
        // 1aa: bipush 8
        // 1ac: istore 12
        // 1ae: goto 1c2
        // 1b1: bipush 9
        // 1b3: istore 12
        // 1b5: goto 1c2
        // 1b8: bipush 10
        // 1ba: istore 12
        // 1bc: goto 1c2
        // 1bf: goto 049
        // 1c2: iload 12
        // 1c4: tableswitch -65 0 10 -307 -172 -116 -103 -97 -84 -78 -59 -65 -46 -26
        // 200: return
    }
}
