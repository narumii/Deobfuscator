package pack.tests.basics.ctrl;

public class Ctrl {
    private String ret = "FAIL";
    public int BRANCHLOCK_DOT_NET_DEMO;

    public Ctrl(int var1) {
    }

    public void runt(int var1) {
        if (!"a".equals("b")) {
            throw new UnsupportedOperationException();
        }
    }

    public void runf(int var1) {
        try {
            this.runt(8206);
        } catch (RuntimeException var3) {
            this.ret = "PASS";
        }

        try {
            this.runt(8206);
            this.ret = "FAIL";
        } catch (Exception var2) {
        }
    }

    public void run(int var1) {
        this.runf(13495);
        System.out.println(this.ret);
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "๎๋\u0003๋ﾐລ1ﾘￌﾊ๎'\n*-"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 4
        // 00b: swap
        // 00c: bipush 13
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 13
        // 013: swap
        // 014: bipush 4
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 5
        // 01b: swap
        // 01c: bipush 0
        // 01d: caload
        // 01e: aload 0
        // 01f: dup
        // 020: bipush 0
        // 021: swap
        // 022: bipush 5
        // 023: caload
        // 024: castore
        // 025: castore
        // 026: aload 0
        // 027: dup
        // 028: bipush 8
        // 02a: swap
        // 02b: bipush 20
        // 02d: caload
        // 02e: aload 0
        // 02f: dup
        // 030: bipush 20
        // 032: swap
        // 033: bipush 8
        // 035: caload
        // 036: castore
        // 037: castore
        // 038: goto 13d
        // 03b: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 03e: bipush 0
        // 03f: aaload
        // 040: astore 4
        // 042: aload 4
        // 044: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 047: invokevirtual java/lang/String.hashCode ()I
        // 04a: ldc 65535
        // 04c: iand
        // 04d: istore 5
        // 04f: aload 4
        // 051: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 054: invokevirtual java/lang/String.toCharArray ()[C
        // 057: astore 6
        // 059: aload 0
        // 05a: iload 1
        // 05b: iinc 1 1
        // 05e: caload
        // 05f: bipush 8
        // 061: ixor
        // 062: iload 5
        // 064: ixor
        // 065: anewarray 24
        // 068: astore 7
        // 06a: bipush 0
        // 06b: istore 8
        // 06d: aload 0
        // 06e: iload 1
        // 06f: iinc 1 1
        // 072: caload
        // 073: sipush 227
        // 076: ixor
        // 077: iload 5
        // 079: ixor
        // 07a: istore 2
        // 07b: iload 2
        // 07c: newarray 5
        // 07e: astore 9
        // 080: bipush 0
        // 081: istore 10
        // 083: iload 2
        // 084: ifle 11e
        // 087: aload 0
        // 088: iload 1
        // 089: caload
        // 08a: istore 11
        // 08c: aload 6
        // 08e: iload 1
        // 08f: aload 6
        // 091: arraylength
        // 092: irem
        // 093: caload
        // 094: bipush 61
        // 096: ixor
        // 097: lookupswitch 113 13 19 220 73 169 77 182 78 195 79 208 81 214 84 226 86 239 88 245 92 252 94 259 95 273 126 266
        // 108: aload 9
        // 10a: iload 10
        // 10c: iload 11
        // 10e: castore
        // 10f: iinc 10 1
        // 112: iinc 1 1
        // 115: iinc 2 -1
        // 118: bipush 0
        // 119: istore 12
        // 11b: goto 1b2
        // 11e: aload 7
        // 120: iload 8
        // 122: iinc 8 1
        // 125: new java/lang/String
        // 128: dup
        // 129: aload 9
        // 12b: invokespecial java/lang/String.<init> ([C)V
        // 12e: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 131: aastore
        // 132: iload 1
        // 133: aload 0
        // 134: arraylength
        // 135: if_icmplt 06d
        // 138: aload 7
        // 13a: putstatic pack/tests/basics/ctrl/Ctrl.d [Ljava/lang/String;
        // 13d: goto 1f0
        // 140: iload 11
        // 142: bipush -97
        // 144: ixor
        // 145: istore 11
        // 147: bipush 1
        // 148: istore 12
        // 14a: goto 1b2
        // 14d: iload 11
        // 14f: bipush 75
        // 151: ixor
        // 152: istore 11
        // 154: bipush 1
        // 155: istore 12
        // 157: goto 1b2
        // 15a: iload 11
        // 15c: bipush -39
        // 15e: ixor
        // 15f: istore 11
        // 161: bipush 1
        // 162: istore 12
        // 164: goto 1b2
        // 167: bipush 2
        // 168: istore 12
        // 16a: goto 1b2
        // 16d: bipush 3
        // 16e: istore 12
        // 170: goto 1b2
        // 173: bipush 4
        // 174: istore 12
        // 176: goto 1b2
        // 179: iload 11
        // 17b: bipush 97
        // 17d: ixor
        // 17e: istore 11
        // 180: bipush 1
        // 181: istore 12
        // 183: goto 1b2
        // 186: bipush 5
        // 187: istore 12
        // 189: goto 1b2
        // 18c: bipush 6
        // 18e: istore 12
        // 190: goto 1b2
        // 193: bipush 7
        // 195: istore 12
        // 197: goto 1b2
        // 19a: bipush 8
        // 19c: istore 12
        // 19e: goto 1b2
        // 1a1: bipush 9
        // 1a3: istore 12
        // 1a5: goto 1b2
        // 1a8: bipush 10
        // 1aa: istore 12
        // 1ac: goto 1b2
        // 1af: goto 03b
        // 1b2: iload 12
        // 1b4: tableswitch -77 0 10 -305 -172 -103 -90 -77 -65 -59 -46 -40 -116 -26
        // 1f0: return
    }
}
