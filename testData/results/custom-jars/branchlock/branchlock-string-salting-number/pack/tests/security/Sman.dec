package pack.tests.security;

import java.security.Permission;

public class Sman extends SecurityManager {
    public int BRANCHLOCK_DOT_NET_DEMO;

    public Sman(int var1) {
    }

    @Override
    public void checkPermission(Permission var1) {
        if (var1.getName().contains("exitVM")) {
            throw new SecurityException("HOOKED");
        }
    }

    static {
        // $VF: Couldn't be decompiled
        // Please report this to the Vineflower issue tracker, at https://github.com/Vineflower/vineflower/issues with a copy of the class file (if you have the rights to distribute it!)
        // java.lang.RuntimeException: parsing failure!
        //   at org.jetbrains.java.decompiler.modules.decompiler.decompose.DomHelper.parseGraph(DomHelper.java:211)
        //   at org.jetbrains.java.decompiler.main.rels.MethodProcessor.codeToJava(MethodProcessor.java:166)
        //
        // Bytecode:
        // 000: ldc "ﾕ\u0ee0ﾒ\u0edabﾑﾮY\u0ee0tUxﾟﾌP"
        // 002: invokevirtual java/lang/String.toCharArray ()[C
        // 005: astore 0
        // 006: bipush 0
        // 007: istore 1
        // 008: aload 0
        // 009: dup
        // 00a: bipush 10
        // 00c: swap
        // 00d: bipush 4
        // 00e: caload
        // 00f: aload 0
        // 010: dup
        // 011: bipush 4
        // 012: swap
        // 013: bipush 10
        // 015: caload
        // 016: castore
        // 017: castore
        // 018: aload 0
        // 019: dup
        // 01a: bipush 9
        // 01c: swap
        // 01d: bipush 11
        // 01f: caload
        // 020: aload 0
        // 021: dup
        // 022: bipush 11
        // 024: swap
        // 025: bipush 9
        // 027: caload
        // 028: castore
        // 029: castore
        // 02a: aload 0
        // 02b: dup
        // 02c: bipush 3
        // 02d: swap
        // 02e: bipush 0
        // 02f: caload
        // 030: aload 0
        // 031: dup
        // 032: bipush 0
        // 033: swap
        // 034: bipush 3
        // 035: caload
        // 036: castore
        // 037: castore
        // 038: aload 0
        // 039: dup
        // 03a: bipush 1
        // 03b: swap
        // 03c: bipush 20
        // 03e: caload
        // 03f: aload 0
        // 040: dup
        // 041: bipush 20
        // 043: swap
        // 044: bipush 1
        // 045: caload
        // 046: castore
        // 047: castore
        // 048: goto 15d
        // 04b: invokevirtual java/lang/Throwable.getStackTrace ()[Ljava/lang/StackTraceElement;
        // 04e: bipush 0
        // 04f: aaload
        // 050: astore 4
        // 052: aload 4
        // 054: invokevirtual java/lang/StackTraceElement.getMethodName ()Ljava/lang/String;
        // 057: invokevirtual java/lang/String.hashCode ()I
        // 05a: ldc 65535
        // 05c: iand
        // 05d: istore 5
        // 05f: aload 4
        // 061: invokevirtual java/lang/StackTraceElement.getClassName ()Ljava/lang/String;
        // 064: invokevirtual java/lang/String.toCharArray ()[C
        // 067: astore 6
        // 069: aload 0
        // 06a: iload 1
        // 06b: iinc 1 1
        // 06e: caload
        // 06f: bipush 113
        // 071: ixor
        // 072: iload 5
        // 074: ixor
        // 075: anewarray 23
        // 078: astore 7
        // 07a: bipush 0
        // 07b: istore 8
        // 07d: aload 0
        // 07e: iload 1
        // 07f: iinc 1 1
        // 082: caload
        // 083: bipush 79
        // 085: ixor
        // 086: iload 5
        // 088: ixor
        // 089: istore 2
        // 08a: iload 2
        // 08b: newarray 5
        // 08d: astore 9
        // 08f: bipush 0
        // 090: istore 10
        // 092: iload 2
        // 093: ifle 13e
        // 096: aload 0
        // 097: iload 1
        // 098: caload
        // 099: istore 11
        // 09b: aload 6
        // 09d: iload 1
        // 09e: aload 6
        // 0a0: arraylength
        // 0a1: irem
        // 0a2: caload
        // 0a3: bipush 34
        // 0a5: ixor
        // 0a6: lookupswitch 130 15 12 237 65 186 67 199 71 212 73 225 75 231 76 243 79 249 80 256 81 263 82 283 86 290 87 297 91 304 113 276
        // 128: aload 9
        // 12a: iload 10
        // 12c: iload 11
        // 12e: castore
        // 12f: iinc 10 1
        // 132: iinc 1 1
        // 135: iinc 2 -1
        // 138: bipush 0
        // 139: istore 12
        // 13b: goto 1e0
        // 13e: aload 7
        // 140: iload 8
        // 142: iinc 8 1
        // 145: new java/lang/String
        // 148: dup
        // 149: aload 9
        // 14b: invokespecial java/lang/String.<init> ([C)V
        // 14e: invokevirtual java/lang/String.intern ()Ljava/lang/String;
        // 151: aastore
        // 152: iload 1
        // 153: aload 0
        // 154: arraylength
        // 155: if_icmplt 07d
        // 158: aload 7
        // 15a: putstatic pack/tests/security/Sman.d [Ljava/lang/String;
        // 15d: goto 224
        // 160: iload 11
        // 162: bipush -38
        // 164: ixor
        // 165: istore 11
        // 167: bipush 1
        // 168: istore 12
        // 16a: goto 1e0
        // 16d: iload 11
        // 16f: bipush 26
        // 171: ixor
        // 172: istore 11
        // 174: bipush 1
        // 175: istore 12
        // 177: goto 1e0
        // 17a: iload 11
        // 17c: bipush -21
        // 17e: ixor
        // 17f: istore 11
        // 181: bipush 1
        // 182: istore 12
        // 184: goto 1e0
        // 187: bipush 2
        // 188: istore 12
        // 18a: goto 1e0
        // 18d: bipush 3
        // 18e: istore 12
        // 190: goto 1e0
        // 193: bipush 4
        // 194: istore 12
        // 196: goto 1e0
        // 199: bipush 5
        // 19a: istore 12
        // 19c: goto 1e0
        // 19f: bipush 6
        // 1a1: istore 12
        // 1a3: goto 1e0
        // 1a6: bipush 7
        // 1a8: istore 12
        // 1aa: goto 1e0
        // 1ad: iload 11
        // 1af: bipush 29
        // 1b1: ixor
        // 1b2: istore 11
        // 1b4: bipush 1
        // 1b5: istore 12
        // 1b7: goto 1e0
        // 1ba: bipush 8
        // 1bc: istore 12
        // 1be: goto 1e0
        // 1c1: bipush 9
        // 1c3: istore 12
        // 1c5: goto 1e0
        // 1c8: bipush 10
        // 1ca: istore 12
        // 1cc: goto 1e0
        // 1cf: bipush 11
        // 1d1: istore 12
        // 1d3: goto 1e0
        // 1d6: bipush 12
        // 1d8: istore 12
        // 1da: goto 1e0
        // 1dd: goto 04b
        // 1e0: iload 12
        // 1e2: tableswitch -40 0 12 -336 -186 -130 -117 -85 -91 -73 -104 -53 -40 -67 -33 -26
        // 224: return
    }
}
