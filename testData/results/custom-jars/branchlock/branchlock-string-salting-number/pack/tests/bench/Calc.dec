package pack.tests.bench;

public class Calc {
    public static int count = 0;
    public int BRANCHLOCK_DOT_NET_DEMO;

    public Calc(int var1) {
    }

    public static void runAll(int var0) {
        long var1 = System.currentTimeMillis();

        for (int var3 = 0; var3 < 10000; var3++) {
            call(100, 17626);
            runAdd(25433);
            runStr(31405);
        }

        System.out.println(d[6] + (System.currentTimeMillis() - var1) + d[1]);
        if (count != 30000) {
            throw new RuntimeException(d[4]);
        }
    }

    private static void call(int var0, int var1) {
        if (var0 == 0) {
            count++;
        } else {
            call(var0 - 1, 17626);
        }
    }

    private static void runAdd(int var0) {
        double var1 = 0.0;

        while (var1 < Double.longBitsToDouble(-292662827L + (Long.parseLong(d[3], 25) ^ 4636744327457716328L))) {
            var1 += Double.longBitsToDouble((4607092347051790635L ^ Long.parseLong(d[2], 27)) - 824017068L);
        }

        count++;
    }

    private static void runStr(int var0) {
        String var1 = d[5];

        while (var1.length() < 101) {
            var1 = var1 + d[0];
        }

        count++;
    }
}
