package pack;

import java.io.File;
import pack.tests.basics.accu.Digi;
import pack.tests.basics.ctrl.Ctrl;
import pack.tests.basics.inner.Test;
import pack.tests.basics.overwirte.Sub;
import pack.tests.basics.runable.Task;
import pack.tests.basics.sub.Solver;
import pack.tests.bench.Calc;
import pack.tests.reflects.annot.annot;
import pack.tests.reflects.counter.Count;
import pack.tests.reflects.field.FTest;
import pack.tests.reflects.loader.LRun;
import pack.tests.reflects.res.Accesor;
import pack.tests.reflects.retrace.Tracer;
import pack.tests.security.SecTest;

public class Main {
    public int BRANCHLOCK_DOT_NET_DEMO;

    public Main(int var1) {
    }

    public static void main(String[] var0) {
        System.out
            .println(
                "-----------------------------------------------------------------------------------------\n| This java application has been obfuscated using a demo version of Branchlock 4.       |\n| Did you know that anyone can read the source code of your exported java software?     |\n| For more information about how to protect your projects, visit https://branchlock.net |\n-----------------------------------------------------------------------------------------\n"
            );
        System.out.println("Obfuscator Test Program");
        System.out.println("Author: huzpsb");
        System.out.println("Version: 1.0r");
        System.out.println("Link: https://github.com/huzpsb/JavaObfuscatorTest");
        File var1 = new File("IK");
        if (!var1.exists()) {
            var1.createNewFile();
            System.out.println();
            System.out.println("[HINT]");
            System.out.println("Only compatibility and efficiency are tested here!");
            System.out.println("For most users, pass all of the basics means the obfuscator is good enough.");
            System.out.println("The Test #2 is for SpringBoot and Android like environment.");
            System.out.println("Choose wisely among strength, compatibility, efficiency, size, and price.");
            System.out.println("[HINT]");
            System.out.println();
        }

        System.out.println("-------------Test #1: Basics-------------");
        System.out.print("Test 1.1: Inheritance ");

        try {
            new Sub(8122).run(29865);
        } catch (Throwable var15) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.2: Cross ");

        try {
            new Sub(8122).run(29865);
        } catch (Throwable var14) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.3: Throw ");

        try {
            new Ctrl(32735).run(12620);
        } catch (Throwable var13) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.4: Accuracy ");

        try {
            new Digi(7043).run(22257);
        } catch (Throwable var12) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.5: SubClass ");

        try {
            new Solver(16217);
        } catch (Throwable var11) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.6: Pool ");

        try {
            new Task(30959).run(15887);
        } catch (Throwable var10) {
            System.out.println("ERROR");
        }

        System.out.print("Test 1.7: InnerClass ");

        try {
            new Test(9340).run(18150);
        } catch (Throwable var9) {
            System.out.println("ERROR");
        }

        System.out.println("-------------Test #2: Reflects-------------");
        System.out.print("Test 2.1: Counter ");

        try {
            new Count(4824).run(18228);
        } catch (Throwable var8) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.2: Chinese 通过LMAO\b\b\b\b    \n");
        System.out.print("Test 2.3: Resource ");

        try {
            new Accesor(15232).run(27444);
        } catch (Throwable var7) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.4: Field ");

        try {
            new FTest(3122).run(29896);
        } catch (Throwable var6) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.5: Loader ");

        try {
            new LRun(4393).run(12617);
        } catch (Throwable var5) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.6: ReTrace ");

        try {
            new Tracer(23239).run(20986);
        } catch (Throwable var4) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.7: Annotation ");

        try {
            new annot(615).run(27375);
        } catch (Throwable var3) {
            System.out.println("ERROR");
        }

        System.out.print("Test 2.8: Sec ");

        try {
            new SecTest(30139).run(22458);
        } catch (Throwable var2) {
            System.out.println("ERROR");
        }

        System.out.println("-------------Test #3: Efficiency-------------");
        Calc.runAll(28038);
        System.out.println("-------------Tests r Finished-------------");
    }
}
