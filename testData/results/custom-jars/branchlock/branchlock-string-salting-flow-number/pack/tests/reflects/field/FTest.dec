package pack.tests.reflects.field;

import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

public class FTest {
    public int BRANCHLOCK_DOT_NET_DEMO;

    public FTest(int var1) {
    }

    // $VF: Irreducible bytecode was duplicated to produce valid code
    public void run(int var1) {
        Constructor var2 = FObject.class.getDeclaredConstructor(int.class);
        if (var2.isAccessible()) {
            System.out.println("FAIL");
        } else {
            var2.setAccessible(true);
            FObject var3 = (FObject)var2.newInstance(1);
            Method var4 = FObject.class.getDeclaredMethod("add", null);
            if (var4.isAccessible()) {
                System.out.println("FAIL");
            } else {
                var4.setAccessible(true);
                var4.invoke(var3);
                Field var5 = FObject.class.getDeclaredField("i");
                if (var1 >= 0) {
                    if (var5.isAccessible()) {
                        if (var1 >= 0) {
                            System.out.println("FAIL");
                            if (var1 >= 0) {
                                return;
                            }

                            return;
                        }

                        if (var1 < 0) {
                            return;
                        }

                        System.out.println("FAIL");
                        if (var1 >= 0) {
                            return;
                        }
                    }
                } else {
                    if (var5.getInt(var3) == 4) {
                        System.out.println("PASS");
                        return;
                    }

                    if (var1 < 0) {
                        return;
                    }

                    System.out.println("FAIL");
                    if (var1 >= 0) {
                        return;
                    }
                }

                do {
                    while (var1 < 0) {
                        if (var5.isAccessible()) {
                            if (var1 >= 0) {
                                System.out.println("FAIL");
                                if (var1 >= 0) {
                                    return;
                                }

                                return;
                            }

                            if (var1 < 0) {
                                return;
                            }

                            System.out.println("FAIL");
                            if (var1 >= 0) {
                                return;
                            }
                        }
                    }

                    var5.setAccessible(true);
                    if (var1 < 0) {
                        System.out.println("FAIL");
                        if (var1 >= 0) {
                            return;
                        }
                        break;
                    }

                    if (var5.getInt(var3) == 4) {
                        System.out.println("PASS");
                        return;
                    }

                    if (var1 < 0) {
                        return;
                    }

                    System.out.println("FAIL");
                } while (var1 < 0);
            }
        }
    }
}
